#  ============LICENSE_START=======================================================
#   Copyright (C) 2022,2024-2025 Nordix Foundation.
#  ================================================================================
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
#  SPDX-License-Identifier: Apache-2.0
#  ============LICENSE_END=========================================================

spring:
  application:
    name: {{ .Values.applicationName }}
  security:
    user:
      name: ${RUNTIME_USER}
      password: ${RUNTIME_PASSWORD}
  mvc:
    converters:
      preferred-json-mapper: gson
  datasource:
    url: jdbc:postgresql://{{ .Values.db.service.name }}:{{ .Values.db.service.internalPort }}/clampacm
    driverClassName: org.postgresql.Driver
    username: ${SQL_USER}
    password: ${SQL_PASSWORD}
    hikari:
      connectionTimeout: 30000
      idleTimeout: 600000
      maxLifetime: 1800000
      maximumPoolSize: 10
  jpa:
    hibernate:
      ddl-auto: none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        implicit-strategy: org.onap.policy.common.spring.utils.CustomImplicitNamingStrategy
    properties:
      hibernate:
        format_sql: true

security:
  enable-csrf: false

metrics:
  security:
    disabled: false

server:
  port: 6969
  servlet:
    context-path: /onap/policy/clamp/acm
  error:
    path: /error
  ssl:
    enabled: false

runtime:
  topics:
    operationTopic: policy-acruntime-participant
    syncTopic: acm-ppnt-sync
  participantParameters:
    heartBeatMs: 120000
    maxStatusWaitMs: 200000
  topicParameterGroup:
    topicSources:
      -
        topic: policy-acruntime-participant
        servers:
          - {{ .Values.global.kafkaServer }}:9092
        topicCommInfrastructure: kafka
        useHttps: false
        fetchTimeout: 15000
        allowTracing: {{ include "policy-clamp-runtime-acm.jaeger-enabled" . }}
        additionalProps:
            group.id: policy-clamp-runtime-acm
    topicSinks:
      -
        topic: ${runtime.topics.operationTopic}
        servers:
          - {{ .Values.global.kafkaServer }}:9092
        topicCommInfrastructure: kafka
        useHttps: false
        allowTracing: {{ include "policy-clamp-runtime-acm.jaeger-enabled" . }}
      -
        topic: ${runtime.topics.syncTopic}
        servers:
          - {{ .Values.global.kafkaServer }}:9092
        topicCommInfrastructure: kafka
        allowTracing: {{ include "policy-clamp-runtime-acm.jaeger-enabled" . }}
        useHttps: false
  acmParameters:
    toscaElementName: {{ .Values.customNaming.toscaElementName }}
    toscaCompositionName: {{ .Values.customNaming.toscaCompositionName }}



management:
  tracing:
    propagation:
      produce: [{{ .Values.jaeger.producer.type }}]
    sampling:
      probability: {{ .Values.jaeger.sampling.probability }}
  endpoints:
    web:
      base-path: /
      exposure:
        include: health, metrics, prometheus

tracing:
  enabled: {{ .Values.jaeger.enabled }}
  exporter:
    endpoint: "{{ .Values.jaeger.collector.host }}:{{ include "policy-clamp-runtime-acm.exporter-port" . }}"
    protocol: {{ .Values.jaeger.collector.protocol }}
  sampler:
    jaeger-remote:
      endpoint: "{{ .Values.jaeger.collector.host }}:{{ .Values.jaeger.collector.portJaegerGrpc }}"
