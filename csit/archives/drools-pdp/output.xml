<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.1a2 (Python 3.10.6 on darwin)" generated="20220902 13:54:27.610" rpa="false" schemaversion="3">
<suite id="s1" name="drools-pdp" source="/Users/liam/git/onap/policy/docker/csit/drools-pdp/tests/drools-pdp-test.robot">
<test id="s1-t1" name="Alive" line="8">
<kw name="Create List" library="BuiltIn">
<var>${auth}</var>
<arg>demo@people.osaaf.org</arg>
<arg>demo123456!</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220902 13:54:27.646" level="INFO">${auth} = ['demo@people.osaaf.org', 'demo123456!']</msg>
<status status="PASS" starttime="20220902 13:54:27.646" endtime="20220902 13:54:27.646"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Creating session http://${POLICY_DROOLS_IP}:9696</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220902 13:54:27.646" level="INFO">Creating session http://192.168.0.7:9696</msg>
<status status="PASS" starttime="20220902 13:54:27.646" endtime="20220902 13:54:27.646"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<var>${session}</var>
<arg>policy</arg>
<arg>http://${POLICY_DROOLS_IP}:9696</arg>
<arg>auth=${auth}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220902 13:54:27.646" level="INFO">Creating Session using : alias=policy, url=http://192.168.0.7:9696, headers={},                     cookies={}, auth=&lt;requests.auth.HTTPBasicAuth object at 0x103fb2f20&gt;, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20220902 13:54:27.646" level="INFO">${session} = &lt;requests.sessions.Session object at 0x103fb3160&gt;</msg>
<status status="PASS" starttime="20220902 13:54:27.646" endtime="20220902 13:54:27.646"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Accept=application/json</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220902 13:54:27.647" level="INFO">${headers} = {'Accept': 'application/json', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220902 13:54:27.646" endtime="20220902 13:54:27.647"/>
</kw>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp}</var>
<arg>policy</arg>
<arg>/policy/pdp/engine</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220902 13:54:27.765" level="INFO">GET Request : url=http://192.168.0.7:9696/policy/pdp/engine 
 path_url=/policy/pdp/engine 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic ZGVtb0BwZW9wbGUub3NhYWYub3JnOmRlbW8xMjM0NTYh'} 
 body=None 
 </msg>
<msg timestamp="20220902 13:54:27.765" level="INFO">GET Response : url=http://192.168.0.7:9696/policy/pdp/engine 
 status=200, reason=OK 
 headers={'Date': 'Fri, 02 Sep 2022 12:54:27 GMT', 'Content-Type': 'application/json', 'Content-Length': '535', 'Server': 'Jetty(9.4.48.v20220622)'} 
 body={"sources":[],"alive":true,"sinks":[],"features":["org.onap.policy.drools.lifecycle.LifecycleFeature"],"stats":{"subgroupStats":{},"groupStat":{"policyExecutedCount":0,"policyExecutedSuccessCount":0,"totalElapsedTime":0.0,"averageExecutionTime":0.0,"lastStart":0,"birthTime":1662123248128,"lastExecutionTime":0,"policyExecutedFailCount":0}},"controllers":[],"httpServers":[{"password":"demo123456!","alive":true,"port":9696,"aaf":false,"name":"CONFIG","host":"0.0.0.0","prometheus":true,"user":"demo@people.osaaf.org"}],"locked":false} 
 </msg>
<msg timestamp="20220902 13:54:27.765" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220902 13:54:27.647" endtime="20220902 13:54:27.765"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Received response from policy ${resp.text}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220902 13:54:27.766" level="INFO">Received response from policy {"sources":[],"alive":true,"sinks":[],"features":["org.onap.policy.drools.lifecycle.LifecycleFeature"],"stats":{"subgroupStats":{},"groupStat":{"policyExecutedCount":0,"policyExecutedSuccessCount":0,"totalElapsedTime":0.0,"averageExecutionTime":0.0,"lastStart":0,"birthTime":1662123248128,"lastExecutionTime":0,"policyExecutedFailCount":0}},"controllers":[],"httpServers":[{"password":"demo123456!","alive":true,"port":9696,"aaf":false,"name":"CONFIG","host":"0.0.0.0","prometheus":true,"user":"demo@people.osaaf.org"}],"locked":false}</msg>
<status status="PASS" starttime="20220902 13:54:27.765" endtime="20220902 13:54:27.766"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${resp.json()['alive']}</arg>
<arg>True</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220902 13:54:27.766" level="INFO">Argument types are:
&lt;class 'bool'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220902 13:54:27.766" endtime="20220902 13:54:27.766"/>
</kw>
<doc>Runs Policy PDP Alive Check</doc>
<status status="PASS" starttime="20220902 13:54:27.646" endtime="20220902 13:54:27.766"/>
</test>
<test id="s1-t2" name="Metrics" line="18">
<kw name="Create List" library="BuiltIn">
<var>${auth}</var>
<arg>demo@people.osaaf.org</arg>
<arg>demo123456!</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220902 13:54:27.767" level="INFO">${auth} = ['demo@people.osaaf.org', 'demo123456!']</msg>
<status status="PASS" starttime="20220902 13:54:27.766" endtime="20220902 13:54:27.767"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Creating session http://${POLICY_DROOLS_IP}:9696</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220902 13:54:27.767" level="INFO">Creating session http://192.168.0.7:9696</msg>
<status status="PASS" starttime="20220902 13:54:27.767" endtime="20220902 13:54:27.767"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<var>${session}</var>
<arg>policy</arg>
<arg>http://${POLICY_DROOLS_IP}:9696</arg>
<arg>auth=${auth}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220902 13:54:27.767" level="INFO">Creating Session using : alias=policy, url=http://192.168.0.7:9696, headers={},                     cookies={}, auth=&lt;requests.auth.HTTPBasicAuth object at 0x104028280&gt;, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20220902 13:54:27.767" level="INFO">${session} = &lt;requests.sessions.Session object at 0x104028460&gt;</msg>
<status status="PASS" starttime="20220902 13:54:27.767" endtime="20220902 13:54:27.767"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Accept=application/json</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220902 13:54:27.767" level="INFO">${headers} = {'Accept': 'application/json', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220902 13:54:27.767" endtime="20220902 13:54:27.767"/>
</kw>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp}</var>
<arg>policy</arg>
<arg>/metrics</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220902 13:54:27.778" level="INFO">GET Request : url=http://192.168.0.7:9696/metrics 
 path_url=/metrics 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic ZGVtb0BwZW9wbGUub3NhYWYub3JnOmRlbW8xMjM0NTYh'} 
 body=None 
 </msg>
<msg timestamp="20220902 13:54:27.778" level="INFO">GET Response : url=http://192.168.0.7:9696/metrics 
 status=200, reason=OK 
 headers={'Date': 'Fri, 02 Sep 2022 12:54:27 GMT', 'Content-Type': 'text/plain; version=0.0.4; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Server': 'Jetty(9.4.48.v20220622)'} 
 body=# HELP jvm_classes_loaded The number of classes that are currently loaded in the JVM
# TYPE jvm_classes_loaded gauge
jvm_classes_loaded 6397.0
# HELP jvm_classes_loaded_total The total number of classes that have been loaded since the JVM has started execution
# TYPE jvm_classes_loaded_total counter
jvm_classes_loaded_total 6397.0
# HELP jvm_classes_unloaded_total The total number of classes that have been unloaded since the JVM has started execution
# TYPE jvm_classes_unloaded_total counter
jvm_classes_unloaded_total 0.0
# HELP jvm_memory_pool_allocated_bytes_total Total bytes allocated in a given JVM memory pool. Only updated after GC, not continuously.
# TYPE jvm_memory_pool_allocated_bytes_total counter
jvm_memory_pool_allocated_bytes_total{pool="CodeHeap 'profiled nmethods'",} 7165824.0
jvm_memory_pool_allocated_bytes_total{pool="G1 Old Gen",} 1.3732776E7
jvm_memory_pool_allocated_bytes_total{pool="G1 Eden Space",} 1.65675008E8
jvm_memory_pool_allocated_bytes_total{pool="CodeHeap 'non-profiled nmethods'",} 1763584.0
jvm_memory_pool_allocated_bytes_total{pool="G1 Survivor Space",} 9437184.0
jvm_memory_pool_allocated_bytes_total{pool="Compressed Class Space",} 4213024.0
jvm_memory_pool_allocated_bytes_total{pool="Metaspace",} 3.56072E7
jvm_memory_pool_allocated_bytes_total{pool="CodeHeap 'non-nmethods'",} 1290880.0
# HELP jvm_buffer_pool_used_bytes Used bytes of a given JVM buffer pool.
# TYPE jvm_buffer_pool_used_bytes gauge
jvm_buffer_pool_used_bytes{pool="mapped",} 0.0
jvm_buffer_pool_used_bytes{pool="direct",} 25111.0
# HELP jvm_buffer_pool_capacity_bytes Bytes capacity of a given JVM buffer pool.
# TYPE jvm_buffer_pool_capacity_bytes gauge
jvm_buffer_pool_capacity_bytes{pool="mapped",} 0.0
jvm_buffer_pool_capacity_bytes{pool="direct",} 25111.0
# HELP jvm_buffer_pool_used_buffers Used buffers of a given JVM buffer pool.
# TYPE jvm_buffer_pool_used_buffers gauge
jvm_buffer_pool_used_buffers{pool="mapped",} 0.0
jvm_buffer_pool_used_buffers{pool="direct",} 4.0
# HELP jvm_gc_collection_seconds Time spent in a given JVM garbage collector in seconds.
# TYPE jvm_gc_collection_seconds summary
jvm_gc_collection_seconds_count{gc="G1 Young Generation",} 5.0
jvm_gc_collection_seconds_sum{gc="G1 Young Generation",} 0.027
jvm_gc_collection_seconds_count{gc="G1 Old Generation",} 0.0
jvm_gc_collection_seconds_sum{gc="G1 Old Generation",} 0.0
# HELP jvm_threads_current Current thread count of a JVM
# TYPE jvm_threads_current gauge
jvm_threads_current 24.0
# HELP jvm_threads_daemon Daemon thread count of a JVM
# TYPE jvm_threads_daemon gauge
jvm_threads_daemon 10.0
# HELP jvm_threads_peak Peak thread count of a JVM
# TYPE jvm_threads_peak gauge
jvm_threads_peak 24.0
# HELP jvm_threads_started_total Started thread count of a JVM
# TYPE jvm_threads_started_total counter
jvm_threads_started_total 25.0
# HELP jvm_threads_deadlocked Cycles of JVM-threads that are in deadlock waiting to acquire object monitors or ownable synchronizers
# TYPE jvm_threads_deadlocked gauge
jvm_threads_deadlocked 0.0
# HELP jvm_threads_deadlocked_monitor Cycles of JVM-threads that are in deadlock waiting to acquire object monitors
# TYPE jvm_threads_deadlocked_monitor gauge
jvm_threads_deadlocked_monitor 0.0
# HELP jvm_threads_state Current count of threads by state
# TYPE jvm_threads_state gauge
jvm_threads_state{state="BLOCKED",} 0.0
jvm_threads_state{state="TERMINATED",} 0.0
jvm_threads_state{state="NEW",} 0.0
jvm_threads_state{state="WAITING",} 8.0
jvm_threads_state{state="RUNNABLE",} 7.0
jvm_threads_state{state="TIMED_WAITING",} 9.0
# HELP jvm_memory_objects_pending_finalization The number of objects waiting in the finalizer queue.
# TYPE jvm_memory_objects_pending_finalization gauge
jvm_memory_objects_pending_finalization 0.0
# HELP jvm_memory_bytes_used Used bytes of a given JVM memory area.
# TYPE jvm_memory_bytes_used gauge
jvm_memory_bytes_used{area="heap",} 2.5165824E7
jvm_memory_bytes_used{area="nonheap",} 5.0736328E7
# HELP jvm_memory_bytes_committed Committed (bytes) of a given JVM memory area.
# TYPE jvm_memory_bytes_committed gauge
jvm_memory_bytes_committed{area="heap",} 5.36870912E8
jvm_memory_bytes_committed{area="nonheap",} 5.4706176E7
# HELP jvm_memory_bytes_max Max (bytes) of a given JVM memory area.
# TYPE jvm_memory_bytes_max gauge
jvm_memory_bytes_max{area="heap",} 5.36870912E8
jvm_memory_bytes_max{area="nonheap",} -1.0
# HELP jvm_memory_bytes_init Initial bytes of a given JVM memory area.
# TYPE jvm_memory_bytes_init gauge
jvm_memory_bytes_init{area="heap",} 5.36870912E8
jvm_memory_bytes_init{area="nonheap",} 7667712.0
# HELP jvm_memory_pool_bytes_used Used bytes of a given JVM memory pool.
# TYPE jvm_memory_pool_bytes_used gauge
jvm_memory_pool_bytes_used{pool="CodeHeap 'non-nmethods'",} 1280128.0
jvm_memory_pool_bytes_used{pool="Metaspace",} 3.6024256E7
jvm_memory_pool_bytes_used{pool="CodeHeap 'profiled nmethods'",} 7355008.0
jvm_memory_pool_bytes_used{pool="Compressed Class Space",} 4270344.0
jvm_memory_pool_bytes_used{pool="G1 Eden Space",} 4194304.0
jvm_memory_pool_bytes_used{pool="G1 Old Gen",} 1.1534336E7
jvm_memory_pool_bytes_used{pool="G1 Survivor Space",} 9437184.0
jvm_memory_pool_bytes_used{pool="CodeHeap 'non-profiled nmethods'",} 1806592.0
# HELP jvm_memory_pool_bytes_committed Committed bytes of a given JVM memory pool.
# TYPE jvm_memory_pool_bytes_committed gauge
jvm_memory_pool_bytes_committed{pool="CodeHeap 'non-nmethods'",} 2555904.0
jvm_memory_pool_bytes_committed{pool="Metaspace",} 3.743744E7
jvm_memory_pool_bytes_committed{pool="CodeHeap 'profiled nmethods'",} 7405568.0
jvm_memory_pool_bytes_committed{pool="Compressed Class Space",} 4751360.0
jvm_memory_pool_bytes_committed{pool="G1 Eden Space",} 1.18489088E8
jvm_memory_pool_bytes_committed{pool="G1 Old Gen",} 4.0894464E8
jvm_memory_pool_bytes_committed{pool="G1 Survivor Space",} 9437184.0
jvm_memory_pool_bytes_committed{pool="CodeHeap 'non-profiled nmethods'",} 2555904.0
# HELP jvm_memory_pool_bytes_max Max bytes of a given JVM memory pool.
# TYPE jvm_memory_pool_bytes_max gauge
jvm_memory_pool_bytes_max{pool="CodeHeap 'non-nmethods'",} 5832704.0
jvm_memory_pool_bytes_max{pool="Metaspace",} -1.0
jvm_memory_pool_bytes_max{pool="CodeHeap 'profiled nmethods'",} 1.22912768E8
jvm_memory_pool_bytes_max{pool="Compressed Class Space",} 1.073741824E9
jvm_memory_pool_bytes_max{pool="G1 Eden Space",} -1.0
jvm_memory_pool_bytes_max{pool="G1 Old Gen",} 5.36870912E8
jvm_memory_pool_bytes_max{pool="G1 Survivor Space",} -1.0
jvm_memory_pool_bytes_max{pool="CodeHeap 'non-profiled nmethods'",} 1.22912768E8
# HELP jvm_memory_pool_bytes_init Initial bytes of a given JVM memory pool.
# TYPE jvm_memory_pool_bytes_init gauge
jvm_memory_pool_bytes_init{pool="CodeHeap 'non-nmethods'",} 2555904.0
jvm_memory_pool_bytes_init{pool="Metaspace",} 0.0
jvm_memory_pool_bytes_init{pool="CodeHeap 'profiled nmethods'",} 2555904.0
jvm_memory_pool_bytes_init{pool="Compressed Class Space",} 0.0
jvm_memory_pool_bytes_init{pool="G1 Eden Space",} 2.8311552E7
jvm_memory_pool_bytes_init{pool="G1 Old Gen",} 5.0855936E8
jvm_memory_pool_bytes_init{pool="G1 Survivor Space",} 0.0
jvm_memory_pool_bytes_init{pool="CodeHeap 'non-profiled nmethods'",} 2555904.0
# HELP jvm_memory_pool_collection_used_bytes Used bytes after last collection of a given JVM memory pool.
# TYPE jvm_memory_pool_collection_used_bytes gauge
jvm_memory_pool_collection_used_bytes{pool="G1 Eden Space",} 0.0
jvm_memory_pool_collection_used_bytes{pool="G1 Old Gen",} 0.0
jvm_memory_pool_collection_used_bytes{pool="G1 Survivor Space",} 9437184.0
# HELP jvm_memory_pool_collection_committed_bytes Committed after last collection bytes of a given JVM memory pool.
# TYPE jvm_memory_pool_collection_committed_bytes gauge
jvm_memory_pool_collection_committed_bytes{pool="G1 Eden Space",} 1.18489088E8
jvm_memory_pool_collection_committed_bytes{pool="G1 Old Gen",} 0.0
jvm_memory_pool_collection_committed_bytes{pool="G1 Survivor Space",} 9437184.0
# HELP jvm_memory_pool_collection_max_bytes Max bytes after last collection of a given JVM memory pool.
# TYPE jvm_memory_pool_collection_max_bytes gauge
jvm_memory_pool_collection_max_bytes{pool="G1 Eden Space",} -1.0
jvm_memory_pool_collection_max_bytes{pool="G1 Old Gen",} 5.36870912E8
jvm_memory_pool_collection_max_bytes{pool="G1 Survivor Space",} -1.0
# HELP jvm_memory_pool_collection_init_bytes Initial after last collection bytes of a given JVM memory pool.
# TYPE jvm_memory_pool_collection_init_bytes gauge
jvm_memory_pool_collection_init_bytes{pool="G1 Eden Space",} 2.8311552E7
jvm_memory_pool_collection_init_bytes{pool="G1 Old Gen",} 5.0855936E8
jvm_memory_pool_collection_init_bytes{pool="G1 Survivor Space",} 0.0
# HELP pdpd_policy_executions_latency_seconds The latency in seconds of TOSCA policy executions.
# TYPE pdpd_policy_executions_latency_seconds summary
# HELP pdpd_policy_deployments_total The total number of policy deployments.
# TYPE pdpd_policy_deployments_total counter
# HELP jvm_info VM version info
# TYPE jvm_info gauge
jvm_info{runtime="OpenJDK Runtime Environment",vendor="Alpine",version="11.0.16.1+1-alpine-r0",} 1.0
# HELP process_cpu_seconds_total Total user and system CPU time spent in seconds.
# TYPE process_cpu_seconds_total counter
process_cpu_seconds_total 3.99
# HELP process_start_time_seconds Start time of the process since unix epoch in seconds.
# TYPE process_start_time_seconds gauge
process_start_time_seconds 1.662123247722E9
# HELP process_open_fds Number of open file descriptors.
# TYPE process_open_fds gauge
process_open_fds 240.0
# HELP process_max_fds Maximum number of open file descriptors.
# TYPE process_max_fds gauge
process_max_fds 1048576.0
# HELP process_virtual_memory_bytes Virtual memory size in bytes.
# TYPE process_virtual_memory_bytes gauge
process_virtual_memory_bytes 2.249949184E9
# HELP process_resident_memory_bytes Resident memory size in bytes.
# TYPE process_resident_memory_bytes gauge
process_resident_memory_bytes 2.23555584E8
# HELP jvm_memory_... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220902 13:54:27.778" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220902 13:54:27.767" endtime="20220902 13:54:27.778"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Received response from policy ${resp.text}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220902 13:54:27.779" level="INFO">Received response from policy # HELP jvm_classes_loaded The number of classes that are currently loaded in the JVM
# TYPE jvm_classes_loaded gauge
jvm_classes_loaded 6397.0
# HELP jvm_classes_loaded_total The total number of classes that have been loaded since the JVM has started execution
# TYPE jvm_classes_loaded_total counter
jvm_classes_loaded_total 6397.0
# HELP jvm_classes_unloaded_total The total number of classes that have been unloaded since the JVM has started execution
# TYPE jvm_classes_unloaded_total counter
jvm_classes_unloaded_total 0.0
# HELP jvm_memory_pool_allocated_bytes_total Total bytes allocated in a given JVM memory pool. Only updated after GC, not continuously.
# TYPE jvm_memory_pool_allocated_bytes_total counter
jvm_memory_pool_allocated_bytes_total{pool="CodeHeap 'profiled nmethods'",} 7165824.0
jvm_memory_pool_allocated_bytes_total{pool="G1 Old Gen",} 1.3732776E7
jvm_memory_pool_allocated_bytes_total{pool="G1 Eden Space",} 1.65675008E8
jvm_memory_pool_allocated_bytes_total{pool="CodeHeap 'non-profiled nmethods'",} 1763584.0
jvm_memory_pool_allocated_bytes_total{pool="G1 Survivor Space",} 9437184.0
jvm_memory_pool_allocated_bytes_total{pool="Compressed Class Space",} 4213024.0
jvm_memory_pool_allocated_bytes_total{pool="Metaspace",} 3.56072E7
jvm_memory_pool_allocated_bytes_total{pool="CodeHeap 'non-nmethods'",} 1290880.0
# HELP jvm_buffer_pool_used_bytes Used bytes of a given JVM buffer pool.
# TYPE jvm_buffer_pool_used_bytes gauge
jvm_buffer_pool_used_bytes{pool="mapped",} 0.0
jvm_buffer_pool_used_bytes{pool="direct",} 25111.0
# HELP jvm_buffer_pool_capacity_bytes Bytes capacity of a given JVM buffer pool.
# TYPE jvm_buffer_pool_capacity_bytes gauge
jvm_buffer_pool_capacity_bytes{pool="mapped",} 0.0
jvm_buffer_pool_capacity_bytes{pool="direct",} 25111.0
# HELP jvm_buffer_pool_used_buffers Used buffers of a given JVM buffer pool.
# TYPE jvm_buffer_pool_used_buffers gauge
jvm_buffer_pool_used_buffers{pool="mapped",} 0.0
jvm_buffer_pool_used_buffers{pool="direct",} 4.0
# HELP jvm_gc_collection_seconds Time spent in a given JVM garbage collector in seconds.
# TYPE jvm_gc_collection_seconds summary
jvm_gc_collection_seconds_count{gc="G1 Young Generation",} 5.0
jvm_gc_collection_seconds_sum{gc="G1 Young Generation",} 0.027
jvm_gc_collection_seconds_count{gc="G1 Old Generation",} 0.0
jvm_gc_collection_seconds_sum{gc="G1 Old Generation",} 0.0
# HELP jvm_threads_current Current thread count of a JVM
# TYPE jvm_threads_current gauge
jvm_threads_current 24.0
# HELP jvm_threads_daemon Daemon thread count of a JVM
# TYPE jvm_threads_daemon gauge
jvm_threads_daemon 10.0
# HELP jvm_threads_peak Peak thread count of a JVM
# TYPE jvm_threads_peak gauge
jvm_threads_peak 24.0
# HELP jvm_threads_started_total Started thread count of a JVM
# TYPE jvm_threads_started_total counter
jvm_threads_started_total 25.0
# HELP jvm_threads_deadlocked Cycles of JVM-threads that are in deadlock waiting to acquire object monitors or ownable synchronizers
# TYPE jvm_threads_deadlocked gauge
jvm_threads_deadlocked 0.0
# HELP jvm_threads_deadlocked_monitor Cycles of JVM-threads that are in deadlock waiting to acquire object monitors
# TYPE jvm_threads_deadlocked_monitor gauge
jvm_threads_deadlocked_monitor 0.0
# HELP jvm_threads_state Current count of threads by state
# TYPE jvm_threads_state gauge
jvm_threads_state{state="BLOCKED",} 0.0
jvm_threads_state{state="TERMINATED",} 0.0
jvm_threads_state{state="NEW",} 0.0
jvm_threads_state{state="WAITING",} 8.0
jvm_threads_state{state="RUNNABLE",} 7.0
jvm_threads_state{state="TIMED_WAITING",} 9.0
# HELP jvm_memory_objects_pending_finalization The number of objects waiting in the finalizer queue.
# TYPE jvm_memory_objects_pending_finalization gauge
jvm_memory_objects_pending_finalization 0.0
# HELP jvm_memory_bytes_used Used bytes of a given JVM memory area.
# TYPE jvm_memory_bytes_used gauge
jvm_memory_bytes_used{area="heap",} 2.5165824E7
jvm_memory_bytes_used{area="nonheap",} 5.0736328E7
# HELP jvm_memory_bytes_committed Committed (bytes) of a given JVM memory area.
# TYPE jvm_memory_bytes_committed gauge
jvm_memory_bytes_committed{area="heap",} 5.36870912E8
jvm_memory_bytes_committed{area="nonheap",} 5.4706176E7
# HELP jvm_memory_bytes_max Max (bytes) of a given JVM memory area.
# TYPE jvm_memory_bytes_max gauge
jvm_memory_bytes_max{area="heap",} 5.36870912E8
jvm_memory_bytes_max{area="nonheap",} -1.0
# HELP jvm_memory_bytes_init Initial bytes of a given JVM memory area.
# TYPE jvm_memory_bytes_init gauge
jvm_memory_bytes_init{area="heap",} 5.36870912E8
jvm_memory_bytes_init{area="nonheap",} 7667712.0
# HELP jvm_memory_pool_bytes_used Used bytes of a given JVM memory pool.
# TYPE jvm_memory_pool_bytes_used gauge
jvm_memory_pool_bytes_used{pool="CodeHeap 'non-nmethods'",} 1280128.0
jvm_memory_pool_bytes_used{pool="Metaspace",} 3.6024256E7
jvm_memory_pool_bytes_used{pool="CodeHeap 'profiled nmethods'",} 7355008.0
jvm_memory_pool_bytes_used{pool="Compressed Class Space",} 4270344.0
jvm_memory_pool_bytes_used{pool="G1 Eden Space",} 4194304.0
jvm_memory_pool_bytes_used{pool="G1 Old Gen",} 1.1534336E7
jvm_memory_pool_bytes_used{pool="G1 Survivor Space",} 9437184.0
jvm_memory_pool_bytes_used{pool="CodeHeap 'non-profiled nmethods'",} 1806592.0
# HELP jvm_memory_pool_bytes_committed Committed bytes of a given JVM memory pool.
# TYPE jvm_memory_pool_bytes_committed gauge
jvm_memory_pool_bytes_committed{pool="CodeHeap 'non-nmethods'",} 2555904.0
jvm_memory_pool_bytes_committed{pool="Metaspace",} 3.743744E7
jvm_memory_pool_bytes_committed{pool="CodeHeap 'profiled nmethods'",} 7405568.0
jvm_memory_pool_bytes_committed{pool="Compressed Class Space",} 4751360.0
jvm_memory_pool_bytes_committed{pool="G1 Eden Space",} 1.18489088E8
jvm_memory_pool_bytes_committed{pool="G1 Old Gen",} 4.0894464E8
jvm_memory_pool_bytes_committed{pool="G1 Survivor Space",} 9437184.0
jvm_memory_pool_bytes_committed{pool="CodeHeap 'non-profiled nmethods'",} 2555904.0
# HELP jvm_memory_pool_bytes_max Max bytes of a given JVM memory pool.
# TYPE jvm_memory_pool_bytes_max gauge
jvm_memory_pool_bytes_max{pool="CodeHeap 'non-nmethods'",} 5832704.0
jvm_memory_pool_bytes_max{pool="Metaspace",} -1.0
jvm_memory_pool_bytes_max{pool="CodeHeap 'profiled nmethods'",} 1.22912768E8
jvm_memory_pool_bytes_max{pool="Compressed Class Space",} 1.073741824E9
jvm_memory_pool_bytes_max{pool="G1 Eden Space",} -1.0
jvm_memory_pool_bytes_max{pool="G1 Old Gen",} 5.36870912E8
jvm_memory_pool_bytes_max{pool="G1 Survivor Space",} -1.0
jvm_memory_pool_bytes_max{pool="CodeHeap 'non-profiled nmethods'",} 1.22912768E8
# HELP jvm_memory_pool_bytes_init Initial bytes of a given JVM memory pool.
# TYPE jvm_memory_pool_bytes_init gauge
jvm_memory_pool_bytes_init{pool="CodeHeap 'non-nmethods'",} 2555904.0
jvm_memory_pool_bytes_init{pool="Metaspace",} 0.0
jvm_memory_pool_bytes_init{pool="CodeHeap 'profiled nmethods'",} 2555904.0
jvm_memory_pool_bytes_init{pool="Compressed Class Space",} 0.0
jvm_memory_pool_bytes_init{pool="G1 Eden Space",} 2.8311552E7
jvm_memory_pool_bytes_init{pool="G1 Old Gen",} 5.0855936E8
jvm_memory_pool_bytes_init{pool="G1 Survivor Space",} 0.0
jvm_memory_pool_bytes_init{pool="CodeHeap 'non-profiled nmethods'",} 2555904.0
# HELP jvm_memory_pool_collection_used_bytes Used bytes after last collection of a given JVM memory pool.
# TYPE jvm_memory_pool_collection_used_bytes gauge
jvm_memory_pool_collection_used_bytes{pool="G1 Eden Space",} 0.0
jvm_memory_pool_collection_used_bytes{pool="G1 Old Gen",} 0.0
jvm_memory_pool_collection_used_bytes{pool="G1 Survivor Space",} 9437184.0
# HELP jvm_memory_pool_collection_committed_bytes Committed after last collection bytes of a given JVM memory pool.
# TYPE jvm_memory_pool_collection_committed_bytes gauge
jvm_memory_pool_collection_committed_bytes{pool="G1 Eden Space",} 1.18489088E8
jvm_memory_pool_collection_committed_bytes{pool="G1 Old Gen",} 0.0
jvm_memory_pool_collection_committed_bytes{pool="G1 Survivor Space",} 9437184.0
# HELP jvm_memory_pool_collection_max_bytes Max bytes after last collection of a given JVM memory pool.
# TYPE jvm_memory_pool_collection_max_bytes gauge
jvm_memory_pool_collection_max_bytes{pool="G1 Eden Space",} -1.0
jvm_memory_pool_collection_max_bytes{pool="G1 Old Gen",} 5.36870912E8
jvm_memory_pool_collection_max_bytes{pool="G1 Survivor Space",} -1.0
# HELP jvm_memory_pool_collection_init_bytes Initial after last collection bytes of a given JVM memory pool.
# TYPE jvm_memory_pool_collection_init_bytes gauge
jvm_memory_pool_collection_init_bytes{pool="G1 Eden Space",} 2.8311552E7
jvm_memory_pool_collection_init_bytes{pool="G1 Old Gen",} 5.0855936E8
jvm_memory_pool_collection_init_bytes{pool="G1 Survivor Space",} 0.0
# HELP pdpd_policy_executions_latency_seconds The latency in seconds of TOSCA policy executions.
# TYPE pdpd_policy_executions_latency_seconds summary
# HELP pdpd_policy_deployments_total The total number of policy deployments.
# TYPE pdpd_policy_deployments_total counter
# HELP jvm_info VM version info
# TYPE jvm_info gauge
jvm_info{runtime="OpenJDK Runtime Environment",vendor="Alpine",version="11.0.16.1+1-alpine-r0",} 1.0
# HELP process_cpu_seconds_total Total user and system CPU time spent in seconds.
# TYPE process_cpu_seconds_total counter
process_cpu_seconds_total 3.99
# HELP process_start_time_seconds Start time of the process since unix epoch in seconds.
# TYPE process_start_time_seconds gauge
process_start_time_seconds 1.662123247722E9
# HELP process_open_fds Number of open file descriptors.
# TYPE process_open_fds gauge
process_open_fds 240.0
# HELP process_max_fds Maximum number of open file descriptors.
# TYPE process_max_fds gauge
process_max_fds 1048576.0
# HELP process_virtual_memory_bytes Virtual memory size in bytes.
# TYPE process_virtual_memory_bytes gauge
process_virtual_memory_bytes 2.249949184E9
# HELP process_resident_memory_bytes Resident memory size in bytes.
# TYPE process_resident_memory_bytes gauge
process_resident_memory_bytes 2.23555584E8
# HELP jvm_memory_pool_allocated_bytes_created Total bytes allocated in a given JVM memory pool. Only updated after GC, not continuously.
# TYPE jvm_memory_pool_allocated_bytes_created gauge
jvm_memory_pool_allocated_bytes_created{pool="CodeHeap 'profiled nmethods'",} 1.662123248409E9
jvm_memory_pool_allocated_bytes_created{pool="G1 Old Gen",} 1.662123248421E9
jvm_memory_pool_allocated_bytes_created{pool="G1 Eden Space",} 1.662123248421E9
jvm_memory_pool_allocated_bytes_created{pool="CodeHeap 'non-profiled nmethods'",} 1.662123248421E9
jvm_memory_pool_allocated_bytes_created{pool="G1 Survivor Space",} 1.662123248421E9
jvm_memory_pool_allocated_bytes_created{pool="Compressed Class Space",} 1.662123248421E9
jvm_memory_pool_allocated_bytes_created{pool="Metaspace",} 1.662123248421E9
jvm_memory_pool_allocated_bytes_created{pool="CodeHeap 'non-nmethods'",} 1.662123248421E9
</msg>
<status status="PASS" starttime="20220902 13:54:27.778" endtime="20220902 13:54:27.779"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${resp.text}</arg>
<arg>jvm_threads_current</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220902 13:54:27.779" endtime="20220902 13:54:27.779"/>
</kw>
<doc>Verify drools-pdp is exporting metrics</doc>
<status status="PASS" starttime="20220902 13:54:27.766" endtime="20220902 13:54:27.779"/>
</test>
<status status="PASS" starttime="20220902 13:54:27.611" endtime="20220902 13:54:27.779"/>
</suite>
<statistics>
<total>
<stat pass="2" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="0" skip="0" id="s1" name="drools-pdp">drools-pdp</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
