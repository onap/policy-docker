<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.1a2 (Python 3.10.6 on darwin)" generated="20220902 13:43:57.237" rpa="false" schemaversion="3">
<suite id="s1" name="distribution" source="/Users/liam/git/onap/policy/docker/csit/distribution/tests/distribution-test.robot">
<test id="s1-t1" name="Healthcheck" line="10">
<kw name="HealthCheckAuth" library="common-library">
<var>${hcauth}</var>
<kw name="Create List" library="BuiltIn">
<var>${healthcheck}</var>
<arg>healthcheck</arg>
<arg>zb!XztG34</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220902 13:43:57.276" level="INFO">${healthcheck} = ['healthcheck', 'zb!XztG34']</msg>
<status status="PASS" starttime="20220902 13:43:57.276" endtime="20220902 13:43:57.276"/>
</kw>
<msg timestamp="20220902 13:43:57.276" level="INFO">${hcauth} = ['healthcheck', 'zb!XztG34']</msg>
<status status="PASS" starttime="20220902 13:43:57.276" endtime="20220902 13:43:57.276"/>
</kw>
<kw name="PerformGetRequest" library="common-library">
<var>${resp}</var>
<arg>${POLICY_DISTRIBUTION_IP}</arg>
<arg>/healthcheck</arg>
<arg>200</arg>
<arg>null</arg>
<arg>${hcauth}</arg>
<kw name="Log" library="BuiltIn">
<arg>Creating session http://${hostname}:6969</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220902 13:43:57.277" level="INFO">Creating session http://172.29.0.8:6969</msg>
<status status="PASS" starttime="20220902 13:43:57.276" endtime="20220902 13:43:57.277"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<var>${session}</var>
<arg>policy</arg>
<arg>http://${hostname}:6969</arg>
<arg>auth=${auth}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220902 13:43:57.277" level="INFO">Creating Session using : alias=policy, url=http://172.29.0.8:6969, headers={},                     cookies={}, auth=&lt;requests.auth.HTTPBasicAuth object at 0x104752650&gt;, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20220902 13:43:57.277" level="INFO">${session} = &lt;requests.sessions.Session object at 0x104752470&gt;</msg>
<status status="PASS" starttime="20220902 13:43:57.277" endtime="20220902 13:43:57.277"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Accept=application/json</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220902 13:43:57.277" level="INFO">${headers} = {'Accept': 'application/json', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220902 13:43:57.277" endtime="20220902 13:43:57.277"/>
</kw>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp}</var>
<arg>policy</arg>
<arg>${url}</arg>
<arg>params=${params}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=${expectedstatus}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220902 13:43:57.357" level="INFO">GET Request : url=http://172.29.0.8:6969/healthcheck?null 
 path_url=/healthcheck?null 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic aGVhbHRoY2hlY2s6emIhWHp0RzM0'} 
 body=None 
 </msg>
<msg timestamp="20220902 13:43:57.357" level="INFO">GET Response : url=http://172.29.0.8:6969/healthcheck?null 
 status=200, reason=OK 
 headers={'Date': 'Fri, 02 Sep 2022 12:43:57 GMT', 'Content-Type': 'application/json', 'Content-Length': '93', 'Server': 'Jetty(9.4.48.v20220622)'} 
 body={"name":"Policy SSD","url":"policy-distribution","healthy":true,"code":200,"message":"alive"} 
 </msg>
<msg timestamp="20220902 13:43:57.357" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220902 13:43:57.277" endtime="20220902 13:43:57.357"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Received response from policy ${resp.text}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220902 13:43:57.357" level="INFO">Received response from policy {"name":"Policy SSD","url":"policy-distribution","healthy":true,"code":200,"message":"alive"}</msg>
<status status="PASS" starttime="20220902 13:43:57.357" endtime="20220902 13:43:57.358"/>
</kw>
<msg timestamp="20220902 13:43:57.358" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220902 13:43:57.276" endtime="20220902 13:43:57.358"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${resp.json()['code']}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220902 13:43:57.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220902 13:43:57.358" endtime="20220902 13:43:57.358"/>
</kw>
<doc>Verify policy distribution health check</doc>
<status status="PASS" starttime="20220902 13:43:57.276" endtime="20220902 13:43:57.358"/>
</test>
<test id="s1-t2" name="Statistics" line="16">
<kw name="HealthCheckAuth" library="common-library">
<var>${hcauth}</var>
<kw name="Create List" library="BuiltIn">
<var>${healthcheck}</var>
<arg>healthcheck</arg>
<arg>zb!XztG34</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220902 13:43:57.359" level="INFO">${healthcheck} = ['healthcheck', 'zb!XztG34']</msg>
<status status="PASS" starttime="20220902 13:43:57.359" endtime="20220902 13:43:57.359"/>
</kw>
<msg timestamp="20220902 13:43:57.359" level="INFO">${hcauth} = ['healthcheck', 'zb!XztG34']</msg>
<status status="PASS" starttime="20220902 13:43:57.359" endtime="20220902 13:43:57.359"/>
</kw>
<kw name="PerformGetRequest" library="common-library">
<var>${resp}</var>
<arg>${POLICY_DISTRIBUTION_IP}</arg>
<arg>/statistics</arg>
<arg>200</arg>
<arg>null</arg>
<arg>${hcauth}</arg>
<kw name="Log" library="BuiltIn">
<arg>Creating session http://${hostname}:6969</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220902 13:43:57.359" level="INFO">Creating session http://172.29.0.8:6969</msg>
<status status="PASS" starttime="20220902 13:43:57.359" endtime="20220902 13:43:57.359"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<var>${session}</var>
<arg>policy</arg>
<arg>http://${hostname}:6969</arg>
<arg>auth=${auth}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220902 13:43:57.360" level="INFO">Creating Session using : alias=policy, url=http://172.29.0.8:6969, headers={},                     cookies={}, auth=&lt;requests.auth.HTTPBasicAuth object at 0x1047486d0&gt;, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20220902 13:43:57.360" level="INFO">${session} = &lt;requests.sessions.Session object at 0x1047488b0&gt;</msg>
<status status="PASS" starttime="20220902 13:43:57.359" endtime="20220902 13:43:57.360"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Accept=application/json</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220902 13:43:57.360" level="INFO">${headers} = {'Accept': 'application/json', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220902 13:43:57.360" endtime="20220902 13:43:57.360"/>
</kw>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp}</var>
<arg>policy</arg>
<arg>${url}</arg>
<arg>params=${params}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=${expectedstatus}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220902 13:43:57.368" level="INFO">GET Request : url=http://172.29.0.8:6969/statistics?null 
 path_url=/statistics?null 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic aGVhbHRoY2hlY2s6emIhWHp0RzM0'} 
 body=None 
 </msg>
<msg timestamp="20220902 13:43:57.368" level="INFO">GET Response : url=http://172.29.0.8:6969/statistics?null 
 status=200, reason=OK 
 headers={'Date': 'Fri, 02 Sep 2022 12:43:57 GMT', 'Content-Type': 'application/json', 'Content-Length': '170', 'Server': 'Jetty(9.4.48.v20220622)'} 
 body={"code":200,"totalDistributionCount":0,"distributionSuccessCount":0,"distributionFailureCount":0,"totalDownloadCount":0,"downloadSuccessCount":0,"downloadFailureCount":0} 
 </msg>
<msg timestamp="20220902 13:43:57.368" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220902 13:43:57.360" endtime="20220902 13:43:57.368"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Received response from policy ${resp.text}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220902 13:43:57.369" level="INFO">Received response from policy {"code":200,"totalDistributionCount":0,"distributionSuccessCount":0,"distributionFailureCount":0,"totalDownloadCount":0,"downloadSuccessCount":0,"downloadFailureCount":0}</msg>
<status status="PASS" starttime="20220902 13:43:57.368" endtime="20220902 13:43:57.369"/>
</kw>
<msg timestamp="20220902 13:43:57.369" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220902 13:43:57.359" endtime="20220902 13:43:57.369"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${resp.json()['code']}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220902 13:43:57.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220902 13:43:57.369" endtime="20220902 13:43:57.369"/>
</kw>
<doc>Verify policy distribution statistics</doc>
<status status="PASS" starttime="20220902 13:43:57.358" endtime="20220902 13:43:57.369"/>
</test>
<test id="s1-t3" name="Metrics" line="22">
<kw name="HealthCheckAuth" library="common-library">
<var>${hcauth}</var>
<kw name="Create List" library="BuiltIn">
<var>${healthcheck}</var>
<arg>healthcheck</arg>
<arg>zb!XztG34</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220902 13:43:57.370" level="INFO">${healthcheck} = ['healthcheck', 'zb!XztG34']</msg>
<status status="PASS" starttime="20220902 13:43:57.370" endtime="20220902 13:43:57.370"/>
</kw>
<msg timestamp="20220902 13:43:57.370" level="INFO">${hcauth} = ['healthcheck', 'zb!XztG34']</msg>
<status status="PASS" starttime="20220902 13:43:57.370" endtime="20220902 13:43:57.370"/>
</kw>
<kw name="PerformGetRequest" library="common-library">
<var>${resp}</var>
<arg>${POLICY_DISTRIBUTION_IP}</arg>
<arg>/metrics</arg>
<arg>200</arg>
<arg>null</arg>
<arg>${hcauth}</arg>
<kw name="Log" library="BuiltIn">
<arg>Creating session http://${hostname}:6969</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220902 13:43:57.370" level="INFO">Creating session http://172.29.0.8:6969</msg>
<status status="PASS" starttime="20220902 13:43:57.370" endtime="20220902 13:43:57.370"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<var>${session}</var>
<arg>policy</arg>
<arg>http://${hostname}:6969</arg>
<arg>auth=${auth}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220902 13:43:57.370" level="INFO">Creating Session using : alias=policy, url=http://172.29.0.8:6969, headers={},                     cookies={}, auth=&lt;requests.auth.HTTPBasicAuth object at 0x10474a1a0&gt;, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20220902 13:43:57.370" level="INFO">${session} = &lt;requests.sessions.Session object at 0x10474a380&gt;</msg>
<status status="PASS" starttime="20220902 13:43:57.370" endtime="20220902 13:43:57.370"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Accept=application/json</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220902 13:43:57.371" level="INFO">${headers} = {'Accept': 'application/json', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220902 13:43:57.370" endtime="20220902 13:43:57.371"/>
</kw>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp}</var>
<arg>policy</arg>
<arg>${url}</arg>
<arg>params=${params}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=${expectedstatus}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220902 13:43:57.382" level="INFO">GET Request : url=http://172.29.0.8:6969/metrics?null 
 path_url=/metrics?null 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic aGVhbHRoY2hlY2s6emIhWHp0RzM0'} 
 body=None 
 </msg>
<msg timestamp="20220902 13:43:57.382" level="INFO">GET Response : url=http://172.29.0.8:6969/metrics?null 
 status=200, reason=OK 
 headers={'Date': 'Fri, 02 Sep 2022 12:43:57 GMT', 'Content-Type': 'text/plain; version=0.0.4; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Server': 'Jetty(9.4.48.v20220622)'} 
 body=# HELP jvm_memory_pool_allocated_bytes_total Total bytes allocated in a given JVM memory pool. Only updated after GC, not continuously.
# TYPE jvm_memory_pool_allocated_bytes_total counter
jvm_memory_pool_allocated_bytes_total{pool="CodeHeap 'profiled nmethods'",} 4348160.0
jvm_memory_pool_allocated_bytes_total{pool="G1 Old Gen",} 1.287184E7
jvm_memory_pool_allocated_bytes_total{pool="G1 Eden Space",} 8.1788928E7
jvm_memory_pool_allocated_bytes_total{pool="CodeHeap 'non-profiled nmethods'",} 897408.0
jvm_memory_pool_allocated_bytes_total{pool="G1 Survivor Space",} 6291456.0
jvm_memory_pool_allocated_bytes_total{pool="Compressed Class Space",} 2996656.0
jvm_memory_pool_allocated_bytes_total{pool="Metaspace",} 2.5951928E7
jvm_memory_pool_allocated_bytes_total{pool="CodeHeap 'non-nmethods'",} 1247744.0
# HELP download_success_count_total Total number of download successfully processed.
# TYPE download_success_count_total counter
download_success_count_total 0.0
# HELP jvm_buffer_pool_used_bytes Used bytes of a given JVM buffer pool.
# TYPE jvm_buffer_pool_used_bytes gauge
jvm_buffer_pool_used_bytes{pool="mapped",} 0.0
jvm_buffer_pool_used_bytes{pool="direct",} 33031.0
# HELP jvm_buffer_pool_capacity_bytes Bytes capacity of a given JVM buffer pool.
# TYPE jvm_buffer_pool_capacity_bytes gauge
jvm_buffer_pool_capacity_bytes{pool="mapped",} 0.0
jvm_buffer_pool_capacity_bytes{pool="direct",} 33031.0
# HELP jvm_buffer_pool_used_buffers Used buffers of a given JVM buffer pool.
# TYPE jvm_buffer_pool_used_buffers gauge
jvm_buffer_pool_used_buffers{pool="mapped",} 0.0
jvm_buffer_pool_used_buffers{pool="direct",} 6.0
# HELP jvm_classes_loaded The number of classes that are currently loaded in the JVM
# TYPE jvm_classes_loaded gauge
jvm_classes_loaded 5625.0
# HELP jvm_classes_loaded_total The total number of classes that have been loaded since the JVM has started execution
# TYPE jvm_classes_loaded_total counter
jvm_classes_loaded_total 5625.0
# HELP jvm_classes_unloaded_total The total number of classes that have been unloaded since the JVM has started execution
# TYPE jvm_classes_unloaded_total counter
jvm_classes_unloaded_total 0.0
# HELP total_download_received_count_total Total number of download received.
# TYPE total_download_received_count_total counter
total_download_received_count_total 0.0
# HELP download_failure_count_total Total number of download failures.
# TYPE download_failure_count_total counter
download_failure_count_total 0.0
# HELP jvm_threads_current Current thread count of a JVM
# TYPE jvm_threads_current gauge
jvm_threads_current 22.0
# HELP jvm_threads_daemon Daemon thread count of a JVM
# TYPE jvm_threads_daemon gauge
jvm_threads_daemon 9.0
# HELP jvm_threads_peak Peak thread count of a JVM
# TYPE jvm_threads_peak gauge
jvm_threads_peak 22.0
# HELP jvm_threads_started_total Started thread count of a JVM
# TYPE jvm_threads_started_total counter
jvm_threads_started_total 23.0
# HELP jvm_threads_deadlocked Cycles of JVM-threads that are in deadlock waiting to acquire object monitors or ownable synchronizers
# TYPE jvm_threads_deadlocked gauge
jvm_threads_deadlocked 0.0
# HELP jvm_threads_deadlocked_monitor Cycles of JVM-threads that are in deadlock waiting to acquire object monitors
# TYPE jvm_threads_deadlocked_monitor gauge
jvm_threads_deadlocked_monitor 0.0
# HELP jvm_threads_state Current count of threads by state
# TYPE jvm_threads_state gauge
jvm_threads_state{state="TERMINATED",} 0.0
jvm_threads_state{state="RUNNABLE",} 8.0
jvm_threads_state{state="BLOCKED",} 0.0
jvm_threads_state{state="WAITING",} 6.0
jvm_threads_state{state="TIMED_WAITING",} 8.0
jvm_threads_state{state="NEW",} 0.0
# HELP jvm_info VM version info
# TYPE jvm_info gauge
jvm_info{runtime="OpenJDK Runtime Environment",vendor="Alpine",version="11.0.16.1+1-alpine-r0",} 1.0
# HELP distribution_failure_count_total Total number of distribution failures.
# TYPE distribution_failure_count_total counter
distribution_failure_count_total 0.0
# HELP jvm_memory_objects_pending_finalization The number of objects waiting in the finalizer queue.
# TYPE jvm_memory_objects_pending_finalization gauge
jvm_memory_objects_pending_finalization 0.0
# HELP jvm_memory_bytes_used Used bytes of a given JVM memory area.
# TYPE jvm_memory_bytes_used gauge
jvm_memory_bytes_used{area="heap",} 4.906424E7
jvm_memory_bytes_used{area="nonheap",} 4.3554256E7
# HELP jvm_memory_bytes_committed Committed (bytes) of a given JVM memory area.
# TYPE jvm_memory_bytes_committed gauge
jvm_memory_bytes_committed{area="heap",} 1.30023424E8
jvm_memory_bytes_committed{area="nonheap",} 4.8037888E7
# HELP jvm_memory_bytes_max Max (bytes) of a given JVM memory area.
# TYPE jvm_memory_bytes_max gauge
jvm_memory_bytes_max{area="heap",} 2.059403264E9
jvm_memory_bytes_max{area="nonheap",} -1.0
# HELP jvm_memory_bytes_init Initial bytes of a given JVM memory area.
# TYPE jvm_memory_bytes_init gauge
jvm_memory_bytes_init{area="heap",} 1.30023424E8
jvm_memory_bytes_init{area="nonheap",} 7667712.0
# HELP jvm_memory_pool_bytes_used Used bytes of a given JVM memory pool.
# TYPE jvm_memory_pool_bytes_used gauge
jvm_memory_pool_bytes_used{pool="CodeHeap 'non-nmethods'",} 1261824.0
jvm_memory_pool_bytes_used{pool="Metaspace",} 3.1709832E7
jvm_memory_pool_bytes_used{pool="CodeHeap 'profiled nmethods'",} 5646208.0
jvm_memory_pool_bytes_used{pool="Compressed Class Space",} 3765176.0
jvm_memory_pool_bytes_used{pool="G1 Eden Space",} 3.5651584E7
jvm_memory_pool_bytes_used{pool="G1 Old Gen",} 1.1315504E7
jvm_memory_pool_bytes_used{pool="G1 Survivor Space",} 2097152.0
jvm_memory_pool_bytes_used{pool="CodeHeap 'non-profiled nmethods'",} 1171712.0
# HELP jvm_memory_pool_bytes_committed Committed bytes of a given JVM memory pool.
# TYPE jvm_memory_pool_bytes_committed gauge
jvm_memory_pool_bytes_committed{pool="CodeHeap 'non-nmethods'",} 2555904.0
jvm_memory_pool_bytes_committed{pool="Metaspace",} 3.3030144E7
jvm_memory_pool_bytes_committed{pool="CodeHeap 'profiled nmethods'",} 5701632.0
jvm_memory_pool_bytes_committed{pool="Compressed Class Space",} 4194304.0
jvm_memory_pool_bytes_committed{pool="G1 Eden Space",} 5.9768832E7
jvm_memory_pool_bytes_committed{pool="G1 Old Gen",} 6.815744E7
jvm_memory_pool_bytes_committed{pool="G1 Survivor Space",} 2097152.0
jvm_memory_pool_bytes_committed{pool="CodeHeap 'non-profiled nmethods'",} 2555904.0
# HELP jvm_memory_pool_bytes_max Max bytes of a given JVM memory pool.
# TYPE jvm_memory_pool_bytes_max gauge
jvm_memory_pool_bytes_max{pool="CodeHeap 'non-nmethods'",} 5832704.0
jvm_memory_pool_bytes_max{pool="Metaspace",} -1.0
jvm_memory_pool_bytes_max{pool="CodeHeap 'profiled nmethods'",} 1.22912768E8
jvm_memory_pool_bytes_max{pool="Compressed Class Space",} 1.073741824E9
jvm_memory_pool_bytes_max{pool="G1 Eden Space",} -1.0
jvm_memory_pool_bytes_max{pool="G1 Old Gen",} 2.059403264E9
jvm_memory_pool_bytes_max{pool="G1 Survivor Space",} -1.0
jvm_memory_pool_bytes_max{pool="CodeHeap 'non-profiled nmethods'",} 1.22912768E8
# HELP jvm_memory_pool_bytes_init Initial bytes of a given JVM memory pool.
# TYPE jvm_memory_pool_bytes_init gauge
jvm_memory_pool_bytes_init{pool="CodeHeap 'non-nmethods'",} 2555904.0
jvm_memory_pool_bytes_init{pool="Metaspace",} 0.0
jvm_memory_pool_bytes_init{pool="CodeHeap 'profiled nmethods'",} 2555904.0
jvm_memory_pool_bytes_init{pool="Compressed Class Space",} 0.0
jvm_memory_pool_bytes_init{pool="G1 Eden Space",} 1.572864E7
jvm_memory_pool_bytes_init{pool="G1 Old Gen",} 1.14294784E8
jvm_memory_pool_bytes_init{pool="G1 Survivor Space",} 0.0
jvm_memory_pool_bytes_init{pool="CodeHeap 'non-profiled nmethods'",} 2555904.0
# HELP jvm_memory_pool_collection_used_bytes Used bytes after last collection of a given JVM memory pool.
# TYPE jvm_memory_pool_collection_used_bytes gauge
jvm_memory_pool_collection_used_bytes{pool="G1 Eden Space",} 0.0
jvm_memory_pool_collection_used_bytes{pool="G1 Old Gen",} 0.0
jvm_memory_pool_collection_used_bytes{pool="G1 Survivor Space",} 2097152.0
# HELP jvm_memory_pool_collection_committed_bytes Committed after last collection bytes of a given JVM memory pool.
# TYPE jvm_memory_pool_collection_committed_bytes gauge
jvm_memory_pool_collection_committed_bytes{pool="G1 Eden Space",} 5.9768832E7
jvm_memory_pool_collection_committed_bytes{pool="G1 Old Gen",} 0.0
jvm_memory_pool_collection_committed_bytes{pool="G1 Survivor Space",} 2097152.0
# HELP jvm_memory_pool_collection_max_bytes Max bytes after last collection of a given JVM memory pool.
# TYPE jvm_memory_pool_collection_max_bytes gauge
jvm_memory_pool_collection_max_bytes{pool="G1 Eden Space",} -1.0
jvm_memory_pool_collection_max_bytes{pool="G1 Old Gen",} 2.059403264E9
jvm_memory_pool_collection_max_bytes{pool="G1 Survivor Space",} -1.0
# HELP jvm_memory_pool_collection_init_bytes Initial after last collection bytes of a given JVM memory pool.
# TYPE jvm_memory_pool_collection_init_bytes gauge
jvm_memory_pool_collection_init_bytes{pool="G1 Eden Space",} 1.572864E7
jvm_memory_pool_collection_init_bytes{pool="G1 Old Gen",} 1.14294784E8
jvm_memory_pool_collection_init_bytes{pool="G1 Survivor Space",} 0.0
# HELP total_distribution_received_count_total Total number of distribution received.
# TYPE total_distribution_received_count_total counter
total_distribution_received_count_total 0.0
# HELP jvm_gc_collection_seconds Time spent in a given JVM garbage collector in seconds.
# TYPE jvm_gc_collection_seconds summary
jvm_gc_collection_seconds_count{gc="G1 Young Generation",} 3.0
jvm_gc_collection_seconds_sum{gc="G1 Young Generation",} 0.013
jvm_gc_collection_seconds_count{gc="G1 Old Generation",} 0.0
jvm_gc_collection_seconds_sum{gc="G1 Old Generation",} 0.0
# HELP process_cpu_seconds_total Total user and system CPU time spent in seconds.
# TYPE process_cpu_seconds_total counter
process_cpu_seconds_total 2.56
# HELP process_start_time_seconds Start time of the process since unix epoch in seconds.
# TYPE process_start_time_seconds gauge
process_start_time_seconds 1.662122632545... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220902 13:43:57.383" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220902 13:43:57.371" endtime="20220902 13:43:57.383"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Received response from policy ${resp.text}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220902 13:43:57.383" level="INFO">Received response from policy # HELP jvm_memory_pool_allocated_bytes_total Total bytes allocated in a given JVM memory pool. Only updated after GC, not continuously.
# TYPE jvm_memory_pool_allocated_bytes_total counter
jvm_memory_pool_allocated_bytes_total{pool="CodeHeap 'profiled nmethods'",} 4348160.0
jvm_memory_pool_allocated_bytes_total{pool="G1 Old Gen",} 1.287184E7
jvm_memory_pool_allocated_bytes_total{pool="G1 Eden Space",} 8.1788928E7
jvm_memory_pool_allocated_bytes_total{pool="CodeHeap 'non-profiled nmethods'",} 897408.0
jvm_memory_pool_allocated_bytes_total{pool="G1 Survivor Space",} 6291456.0
jvm_memory_pool_allocated_bytes_total{pool="Compressed Class Space",} 2996656.0
jvm_memory_pool_allocated_bytes_total{pool="Metaspace",} 2.5951928E7
jvm_memory_pool_allocated_bytes_total{pool="CodeHeap 'non-nmethods'",} 1247744.0
# HELP download_success_count_total Total number of download successfully processed.
# TYPE download_success_count_total counter
download_success_count_total 0.0
# HELP jvm_buffer_pool_used_bytes Used bytes of a given JVM buffer pool.
# TYPE jvm_buffer_pool_used_bytes gauge
jvm_buffer_pool_used_bytes{pool="mapped",} 0.0
jvm_buffer_pool_used_bytes{pool="direct",} 33031.0
# HELP jvm_buffer_pool_capacity_bytes Bytes capacity of a given JVM buffer pool.
# TYPE jvm_buffer_pool_capacity_bytes gauge
jvm_buffer_pool_capacity_bytes{pool="mapped",} 0.0
jvm_buffer_pool_capacity_bytes{pool="direct",} 33031.0
# HELP jvm_buffer_pool_used_buffers Used buffers of a given JVM buffer pool.
# TYPE jvm_buffer_pool_used_buffers gauge
jvm_buffer_pool_used_buffers{pool="mapped",} 0.0
jvm_buffer_pool_used_buffers{pool="direct",} 6.0
# HELP jvm_classes_loaded The number of classes that are currently loaded in the JVM
# TYPE jvm_classes_loaded gauge
jvm_classes_loaded 5625.0
# HELP jvm_classes_loaded_total The total number of classes that have been loaded since the JVM has started execution
# TYPE jvm_classes_loaded_total counter
jvm_classes_loaded_total 5625.0
# HELP jvm_classes_unloaded_total The total number of classes that have been unloaded since the JVM has started execution
# TYPE jvm_classes_unloaded_total counter
jvm_classes_unloaded_total 0.0
# HELP total_download_received_count_total Total number of download received.
# TYPE total_download_received_count_total counter
total_download_received_count_total 0.0
# HELP download_failure_count_total Total number of download failures.
# TYPE download_failure_count_total counter
download_failure_count_total 0.0
# HELP jvm_threads_current Current thread count of a JVM
# TYPE jvm_threads_current gauge
jvm_threads_current 22.0
# HELP jvm_threads_daemon Daemon thread count of a JVM
# TYPE jvm_threads_daemon gauge
jvm_threads_daemon 9.0
# HELP jvm_threads_peak Peak thread count of a JVM
# TYPE jvm_threads_peak gauge
jvm_threads_peak 22.0
# HELP jvm_threads_started_total Started thread count of a JVM
# TYPE jvm_threads_started_total counter
jvm_threads_started_total 23.0
# HELP jvm_threads_deadlocked Cycles of JVM-threads that are in deadlock waiting to acquire object monitors or ownable synchronizers
# TYPE jvm_threads_deadlocked gauge
jvm_threads_deadlocked 0.0
# HELP jvm_threads_deadlocked_monitor Cycles of JVM-threads that are in deadlock waiting to acquire object monitors
# TYPE jvm_threads_deadlocked_monitor gauge
jvm_threads_deadlocked_monitor 0.0
# HELP jvm_threads_state Current count of threads by state
# TYPE jvm_threads_state gauge
jvm_threads_state{state="TERMINATED",} 0.0
jvm_threads_state{state="RUNNABLE",} 8.0
jvm_threads_state{state="BLOCKED",} 0.0
jvm_threads_state{state="WAITING",} 6.0
jvm_threads_state{state="TIMED_WAITING",} 8.0
jvm_threads_state{state="NEW",} 0.0
# HELP jvm_info VM version info
# TYPE jvm_info gauge
jvm_info{runtime="OpenJDK Runtime Environment",vendor="Alpine",version="11.0.16.1+1-alpine-r0",} 1.0
# HELP distribution_failure_count_total Total number of distribution failures.
# TYPE distribution_failure_count_total counter
distribution_failure_count_total 0.0
# HELP jvm_memory_objects_pending_finalization The number of objects waiting in the finalizer queue.
# TYPE jvm_memory_objects_pending_finalization gauge
jvm_memory_objects_pending_finalization 0.0
# HELP jvm_memory_bytes_used Used bytes of a given JVM memory area.
# TYPE jvm_memory_bytes_used gauge
jvm_memory_bytes_used{area="heap",} 4.906424E7
jvm_memory_bytes_used{area="nonheap",} 4.3554256E7
# HELP jvm_memory_bytes_committed Committed (bytes) of a given JVM memory area.
# TYPE jvm_memory_bytes_committed gauge
jvm_memory_bytes_committed{area="heap",} 1.30023424E8
jvm_memory_bytes_committed{area="nonheap",} 4.8037888E7
# HELP jvm_memory_bytes_max Max (bytes) of a given JVM memory area.
# TYPE jvm_memory_bytes_max gauge
jvm_memory_bytes_max{area="heap",} 2.059403264E9
jvm_memory_bytes_max{area="nonheap",} -1.0
# HELP jvm_memory_bytes_init Initial bytes of a given JVM memory area.
# TYPE jvm_memory_bytes_init gauge
jvm_memory_bytes_init{area="heap",} 1.30023424E8
jvm_memory_bytes_init{area="nonheap",} 7667712.0
# HELP jvm_memory_pool_bytes_used Used bytes of a given JVM memory pool.
# TYPE jvm_memory_pool_bytes_used gauge
jvm_memory_pool_bytes_used{pool="CodeHeap 'non-nmethods'",} 1261824.0
jvm_memory_pool_bytes_used{pool="Metaspace",} 3.1709832E7
jvm_memory_pool_bytes_used{pool="CodeHeap 'profiled nmethods'",} 5646208.0
jvm_memory_pool_bytes_used{pool="Compressed Class Space",} 3765176.0
jvm_memory_pool_bytes_used{pool="G1 Eden Space",} 3.5651584E7
jvm_memory_pool_bytes_used{pool="G1 Old Gen",} 1.1315504E7
jvm_memory_pool_bytes_used{pool="G1 Survivor Space",} 2097152.0
jvm_memory_pool_bytes_used{pool="CodeHeap 'non-profiled nmethods'",} 1171712.0
# HELP jvm_memory_pool_bytes_committed Committed bytes of a given JVM memory pool.
# TYPE jvm_memory_pool_bytes_committed gauge
jvm_memory_pool_bytes_committed{pool="CodeHeap 'non-nmethods'",} 2555904.0
jvm_memory_pool_bytes_committed{pool="Metaspace",} 3.3030144E7
jvm_memory_pool_bytes_committed{pool="CodeHeap 'profiled nmethods'",} 5701632.0
jvm_memory_pool_bytes_committed{pool="Compressed Class Space",} 4194304.0
jvm_memory_pool_bytes_committed{pool="G1 Eden Space",} 5.9768832E7
jvm_memory_pool_bytes_committed{pool="G1 Old Gen",} 6.815744E7
jvm_memory_pool_bytes_committed{pool="G1 Survivor Space",} 2097152.0
jvm_memory_pool_bytes_committed{pool="CodeHeap 'non-profiled nmethods'",} 2555904.0
# HELP jvm_memory_pool_bytes_max Max bytes of a given JVM memory pool.
# TYPE jvm_memory_pool_bytes_max gauge
jvm_memory_pool_bytes_max{pool="CodeHeap 'non-nmethods'",} 5832704.0
jvm_memory_pool_bytes_max{pool="Metaspace",} -1.0
jvm_memory_pool_bytes_max{pool="CodeHeap 'profiled nmethods'",} 1.22912768E8
jvm_memory_pool_bytes_max{pool="Compressed Class Space",} 1.073741824E9
jvm_memory_pool_bytes_max{pool="G1 Eden Space",} -1.0
jvm_memory_pool_bytes_max{pool="G1 Old Gen",} 2.059403264E9
jvm_memory_pool_bytes_max{pool="G1 Survivor Space",} -1.0
jvm_memory_pool_bytes_max{pool="CodeHeap 'non-profiled nmethods'",} 1.22912768E8
# HELP jvm_memory_pool_bytes_init Initial bytes of a given JVM memory pool.
# TYPE jvm_memory_pool_bytes_init gauge
jvm_memory_pool_bytes_init{pool="CodeHeap 'non-nmethods'",} 2555904.0
jvm_memory_pool_bytes_init{pool="Metaspace",} 0.0
jvm_memory_pool_bytes_init{pool="CodeHeap 'profiled nmethods'",} 2555904.0
jvm_memory_pool_bytes_init{pool="Compressed Class Space",} 0.0
jvm_memory_pool_bytes_init{pool="G1 Eden Space",} 1.572864E7
jvm_memory_pool_bytes_init{pool="G1 Old Gen",} 1.14294784E8
jvm_memory_pool_bytes_init{pool="G1 Survivor Space",} 0.0
jvm_memory_pool_bytes_init{pool="CodeHeap 'non-profiled nmethods'",} 2555904.0
# HELP jvm_memory_pool_collection_used_bytes Used bytes after last collection of a given JVM memory pool.
# TYPE jvm_memory_pool_collection_used_bytes gauge
jvm_memory_pool_collection_used_bytes{pool="G1 Eden Space",} 0.0
jvm_memory_pool_collection_used_bytes{pool="G1 Old Gen",} 0.0
jvm_memory_pool_collection_used_bytes{pool="G1 Survivor Space",} 2097152.0
# HELP jvm_memory_pool_collection_committed_bytes Committed after last collection bytes of a given JVM memory pool.
# TYPE jvm_memory_pool_collection_committed_bytes gauge
jvm_memory_pool_collection_committed_bytes{pool="G1 Eden Space",} 5.9768832E7
jvm_memory_pool_collection_committed_bytes{pool="G1 Old Gen",} 0.0
jvm_memory_pool_collection_committed_bytes{pool="G1 Survivor Space",} 2097152.0
# HELP jvm_memory_pool_collection_max_bytes Max bytes after last collection of a given JVM memory pool.
# TYPE jvm_memory_pool_collection_max_bytes gauge
jvm_memory_pool_collection_max_bytes{pool="G1 Eden Space",} -1.0
jvm_memory_pool_collection_max_bytes{pool="G1 Old Gen",} 2.059403264E9
jvm_memory_pool_collection_max_bytes{pool="G1 Survivor Space",} -1.0
# HELP jvm_memory_pool_collection_init_bytes Initial after last collection bytes of a given JVM memory pool.
# TYPE jvm_memory_pool_collection_init_bytes gauge
jvm_memory_pool_collection_init_bytes{pool="G1 Eden Space",} 1.572864E7
jvm_memory_pool_collection_init_bytes{pool="G1 Old Gen",} 1.14294784E8
jvm_memory_pool_collection_init_bytes{pool="G1 Survivor Space",} 0.0
# HELP total_distribution_received_count_total Total number of distribution received.
# TYPE total_distribution_received_count_total counter
total_distribution_received_count_total 0.0
# HELP jvm_gc_collection_seconds Time spent in a given JVM garbage collector in seconds.
# TYPE jvm_gc_collection_seconds summary
jvm_gc_collection_seconds_count{gc="G1 Young Generation",} 3.0
jvm_gc_collection_seconds_sum{gc="G1 Young Generation",} 0.013
jvm_gc_collection_seconds_count{gc="G1 Old Generation",} 0.0
jvm_gc_collection_seconds_sum{gc="G1 Old Generation",} 0.0
# HELP process_cpu_seconds_total Total user and system CPU time spent in seconds.
# TYPE process_cpu_seconds_total counter
process_cpu_seconds_total 2.56
# HELP process_start_time_seconds Start time of the process since unix epoch in seconds.
# TYPE process_start_time_seconds gauge
process_start_time_seconds 1.662122632545E9
# HELP process_open_fds Number of open file descriptors.
# TYPE process_open_fds gauge
process_open_fds 159.0
# HELP process_max_fds Maximum number of open file descriptors.
# TYPE process_max_fds gauge
process_max_fds 1048576.0
# HELP process_virtual_memory_bytes Virtual memory size in bytes.
# TYPE process_virtual_memory_bytes gauge
process_virtual_memory_bytes 3.811598336E9
# HELP process_resident_memory_bytes Resident memory size in bytes.
# TYPE process_resident_memory_bytes gauge
process_resident_memory_bytes 1.57007872E8
# HELP distribution_success_count_total Total number of distribution successfully processed.
# TYPE distribution_success_count_total counter
distribution_success_count_total 0.0
# HELP distribution_failure_count_created Total number of distribution failures.
# TYPE distribution_failure_count_created gauge
distribution_failure_count_created 1.662122637366E9
# HELP distribution_success_count_created Total number of distribution successfully processed.
# TYPE distribution_success_count_created gauge
distribution_success_count_created 1.662122637366E9
# HELP download_failure_count_created Total number of download failures.
# TYPE download_failure_count_created gauge
download_failure_count_created 1.662122637366E9
# HELP download_success_count_created Total number of download successfully processed.
# TYPE download_success_count_created gauge
download_success_count_created 1.662122637366E9
# HELP jvm_memory_pool_allocated_bytes_created Total bytes allocated in a given JVM memory pool. Only updated after GC, not continuously.
# TYPE jvm_memory_pool_allocated_bytes_created gauge
jvm_memory_pool_allocated_bytes_created{pool="CodeHeap 'profiled nmethods'",} 1.66212263315E9
jvm_memory_pool_allocated_bytes_created{pool="G1 Old Gen",} 1.662122633155E9
jvm_memory_pool_allocated_bytes_created{pool="G1 Eden Space",} 1.662122633155E9
jvm_memory_pool_allocated_bytes_created{pool="CodeHeap 'non-profiled nmethods'",} 1.662122633155E9
jvm_memory_pool_allocated_bytes_created{pool="G1 Survivor Space",} 1.662122633155E9
jvm_memory_pool_allocated_bytes_created{pool="Compressed Class Space",} 1.662122633155E9
jvm_memory_pool_allocated_bytes_created{pool="Metaspace",} 1.662122633155E9
jvm_memory_pool_allocated_bytes_created{pool="CodeHeap 'non-nmethods'",} 1.662122633155E9
# HELP total_distribution_received_count_created Total number of distribution received.
# TYPE total_distribution_received_count_created gauge
total_distribution_received_count_created 1.662122637366E9
# HELP total_download_received_count_created Total number of download received.
# TYPE total_download_received_count_created gauge
total_download_received_count_created 1.662122637366E9
</msg>
<status status="PASS" starttime="20220902 13:43:57.383" endtime="20220902 13:43:57.383"/>
</kw>
<msg timestamp="20220902 13:43:57.383" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220902 13:43:57.370" endtime="20220902 13:43:57.383"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${resp.text}</arg>
<arg>total_distribution_received_count_total 0.0</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220902 13:43:57.383" endtime="20220902 13:43:57.384"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${resp.text}</arg>
<arg>distribution_success_count_total 0.0</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220902 13:43:57.384" endtime="20220902 13:43:57.384"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${resp.text}</arg>
<arg>distribution_failure_count_total 0.0</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220902 13:43:57.384" endtime="20220902 13:43:57.384"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${resp.text}</arg>
<arg>total_download_received_count_total 0.0</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220902 13:43:57.384" endtime="20220902 13:43:57.384"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${resp.text}</arg>
<arg>download_success_count_total 0.0</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220902 13:43:57.384" endtime="20220902 13:43:57.385"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${resp.text}</arg>
<arg>download_failure_count_total 0.0</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220902 13:43:57.385" endtime="20220902 13:43:57.385"/>
</kw>
<doc>Verify policy-distribution is exporting prometheus metrics</doc>
<status status="PASS" starttime="20220902 13:43:57.369" endtime="20220902 13:43:57.385"/>
</test>
<test id="s1-t4" name="InvokeDistributionAndRunEventOnEngine" line="33">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5 min</arg>
<arg>30 sec</arg>
<arg>InvokeDistributionUsingFile And RunEventOnApexEngine</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="InvokeDistributionUsingFile And RunEventOnApexEngine">
<kw name="Copy File" library="OperatingSystem">
<arg>${SCRIPT_DIR}/csar/csar_temp.csar</arg>
<arg>${SCRIPT_DIR}/csar/temp.csar</arg>
<doc>Copies the source file into the destination.</doc>
<msg timestamp="20220902 13:43:57.386" level="INFO" html="true">Copied file from '&lt;a href="file:///Users/liam/git/onap/policy/docker/csit/distribution/config/csar/csar_temp.csar"&gt;/Users/liam/git/onap/policy/docker/csit/distribution/config/csar/csar_temp.csar&lt;/a&gt;' to '&lt;a href="file:///Users/liam/git/onap/policy/docker/csit/distribution/config/csar/temp.csar"&gt;/Users/liam/git/onap/policy/docker/csit/distribution/config/csar/temp.csar&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20220902 13:43:57.385" endtime="20220902 13:43:57.386"/>
</kw>
<kw name="Move File" library="OperatingSystem">
<arg>${SCRIPT_DIR}/csar/temp.csar</arg>
<arg>${SCRIPT_DIR}/temp/sample_csar_with_apex_policy.csar</arg>
<doc>Moves the source file into the destination.</doc>
<msg timestamp="20220902 13:43:57.387" level="INFO" html="true">Moved file from '&lt;a href="file:///Users/liam/git/onap/policy/docker/csit/distribution/config/csar/temp.csar"&gt;/Users/liam/git/onap/policy/docker/csit/distribution/config/csar/temp.csar&lt;/a&gt;' to '&lt;a href="file:///Users/liam/git/onap/policy/docker/csit/distribution/config/temp/sample_csar_with_apex_policy.csar"&gt;/Users/liam/git/onap/policy/docker/csit/distribution/config/temp/sample_csar_with_apex_policy.csar&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20220902 13:43:57.386" endtime="20220902 13:43:57.387"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>20 seconds</arg>
<arg>"Waiting for the Policy Distribution to call Policy API and PAP"</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20220902 13:44:17.389" level="INFO">Slept 20 seconds</msg>
<msg timestamp="20220902 13:44:17.389" level="INFO">"Waiting for the Policy Distribution to call Policy API and PAP"</msg>
<status status="PASS" starttime="20220902 13:43:57.387" endtime="20220902 13:44:17.390"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>apexSession</arg>
<arg>http://${APEX_IP}:23324</arg>
<arg>max_retries=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220902 13:44:17.392" level="INFO">Creating Session using : alias=apexSession, url=http://172.29.0.7:23324, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220902 13:44:17.390" endtime="20220902 13:44:17.393"/>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<var>${data}</var>
<arg>/Users/liam/git/onap/policy/docker/csit/distribution/tests${/}data${/}event.json</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220902 13:44:17.394" level="INFO" html="true">Getting file '&lt;a href="file:///Users/liam/git/onap/policy/docker/csit/distribution/tests/data/event.json"&gt;/Users/liam/git/onap/policy/docker/csit/distribution/tests/data/event.json&lt;/a&gt;'.</msg>
<msg timestamp="20220902 13:44:17.396" level="INFO">${data} = {
    "nameSpace": "org.onap.policy.apex.sample.events",
    "name": "Event0000",
    "version": "0.0.1",
    "source": "REST_0",
    "target": "apex",
    "TestSlogan": "Test slogan for External Even...</msg>
<status status="PASS" starttime="20220902 13:44:17.393" endtime="20220902 13:44:17.397"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Accept=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220902 13:44:17.398" level="INFO">&amp;{headers} = { Content-Type=application/json | Accept=application/json }</msg>
<status status="PASS" starttime="20220902 13:44:17.397" endtime="20220902 13:44:17.398"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${resp}</var>
<arg>apexSession</arg>
<arg>/apex/FirstConsumer/EventIn</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=200</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20220902 13:44:17.616" level="INFO">PUT Request : url=http://172.29.0.7:23324/apex/FirstConsumer/EventIn 
 path_url=/apex/FirstConsumer/EventIn 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '299'} 
 body=b'{\n    "nameSpace": "org.onap.policy.apex.sample.events",\n    "name": "Event0000",\n    "version": "0.0.1",\n    "source": "REST_0",\n    "target": "apex",\n    "TestSlogan": "Test slogan for External Event0",\n    "TestMatchCase": 3,\n    "TestTimestamp": 1536363522018,\n    "TestTemperature": 9080.866\n}\n' 
 </msg>
<msg timestamp="20220902 13:44:17.616" level="INFO">PUT Response : url=http://172.29.0.7:23324/apex/FirstConsumer/EventIn 
 status=200, reason=OK 
 headers={'Date': 'Fri, 02 Sep 2022 12:44:17 GMT', 'Content-Type': 'application/json', 'Access-Control-Expose-Headers': 'Content-Type, Accept, Allow', 'Access-Control-Allow-Headers': 'Origin, Content-Type, Accept', 'Access-Control-Allow-Credentials': 'true', 'Access-Control-Allow-Methods': 'OPTIONS, GET, POST, PUT', 'Content-Length': '588', 'Server': 'Jetty(9.4.48.v20220622)'} 
 body={
  "name": "Event0004",
  "version": "0.0.1",
  "nameSpace": "org.onap.policy.apex.sample.events",
  "source": "Act",
  "target": "Outside",
  "toscaPolicyState": "",
  "TestActCaseSelected": 3,
  "TestActStateTime": 1662122657549,
  "TestDecideCaseSelected": 1,
  "TestDecideStateTime": 1662122657546,
  "TestEstablishCaseSelected": 0,
  "TestEstablishStateTime": 1662122657543,
  "TestMatchCase": 3,
  "TestMatchCaseSelected": 2,
  "TestMatchStateTime": 1662122657538,
  "TestSlogan": "Test slogan for External Event0",
  "TestTemperature": 9080.866,
  "TestTimestamp": 1536363522018
} 
 </msg>
<msg timestamp="20220902 13:44:17.617" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220902 13:44:17.398" endtime="20220902 13:44:17.617"/>
</kw>
<kw name="Remove Files" library="OperatingSystem">
<arg>${SCRIPT_DIR}/temp/sample_csar_with_apex_policy.csar</arg>
<doc>Uses `Remove File` to remove multiple files one-by-one.</doc>
<msg timestamp="20220902 13:44:17.618" level="INFO" html="true">Removed file '&lt;a href="file:///Users/liam/git/onap/policy/docker/csit/distribution/config/temp/sample_csar_with_apex_policy.csar"&gt;/Users/liam/git/onap/policy/docker/csit/distribution/config/temp/sample_csar_with_apex_policy.csar&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20220902 13:44:17.617" endtime="20220902 13:44:17.618"/>
</kw>
<status status="PASS" starttime="20220902 13:43:57.385" endtime="20220902 13:44:17.619"/>
</kw>
<status status="PASS" starttime="20220902 13:43:57.385" endtime="20220902 13:44:17.619"/>
</kw>
<status status="PASS" starttime="20220902 13:43:57.385" endtime="20220902 13:44:17.619"/>
</test>
<test id="s1-t5" name="MetricsAfterExecution" line="36">
<kw name="HealthCheckAuth" library="common-library">
<var>${hcauth}</var>
<kw name="Create List" library="BuiltIn">
<var>${healthcheck}</var>
<arg>healthcheck</arg>
<arg>zb!XztG34</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220902 13:44:17.622" level="INFO">${healthcheck} = ['healthcheck', 'zb!XztG34']</msg>
<status status="PASS" starttime="20220902 13:44:17.622" endtime="20220902 13:44:17.622"/>
</kw>
<msg timestamp="20220902 13:44:17.623" level="INFO">${hcauth} = ['healthcheck', 'zb!XztG34']</msg>
<status status="PASS" starttime="20220902 13:44:17.621" endtime="20220902 13:44:17.623"/>
</kw>
<kw name="PerformGetRequest" library="common-library">
<var>${resp}</var>
<arg>${POLICY_DISTRIBUTION_IP}</arg>
<arg>/metrics</arg>
<arg>200</arg>
<arg>null</arg>
<arg>${hcauth}</arg>
<kw name="Log" library="BuiltIn">
<arg>Creating session http://${hostname}:6969</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220902 13:44:17.625" level="INFO">Creating session http://172.29.0.8:6969</msg>
<status status="PASS" starttime="20220902 13:44:17.624" endtime="20220902 13:44:17.625"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<var>${session}</var>
<arg>policy</arg>
<arg>http://${hostname}:6969</arg>
<arg>auth=${auth}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220902 13:44:17.626" level="INFO">Creating Session using : alias=policy, url=http://172.29.0.8:6969, headers={},                     cookies={}, auth=&lt;requests.auth.HTTPBasicAuth object at 0x10474bfa0&gt;, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20220902 13:44:17.626" level="INFO">${session} = &lt;requests.sessions.Session object at 0x10474b4c0&gt;</msg>
<status status="PASS" starttime="20220902 13:44:17.625" endtime="20220902 13:44:17.626"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Accept=application/json</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220902 13:44:17.627" level="INFO">${headers} = {'Accept': 'application/json', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220902 13:44:17.627" endtime="20220902 13:44:17.627"/>
</kw>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp}</var>
<arg>policy</arg>
<arg>${url}</arg>
<arg>params=${params}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=${expectedstatus}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220902 13:44:17.637" level="INFO">GET Request : url=http://172.29.0.8:6969/metrics?null 
 path_url=/metrics?null 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Basic aGVhbHRoY2hlY2s6emIhWHp0RzM0'} 
 body=None 
 </msg>
<msg timestamp="20220902 13:44:17.638" level="INFO">GET Response : url=http://172.29.0.8:6969/metrics?null 
 status=200, reason=OK 
 headers={'Date': 'Fri, 02 Sep 2022 12:44:17 GMT', 'Content-Type': 'text/plain; version=0.0.4; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Server': 'Jetty(9.4.48.v20220622)'} 
 body=# HELP jvm_memory_pool_allocated_bytes_total Total bytes allocated in a given JVM memory pool. Only updated after GC, not continuously.
# TYPE jvm_memory_pool_allocated_bytes_total counter
jvm_memory_pool_allocated_bytes_total{pool="CodeHeap 'profiled nmethods'",} 7096832.0
jvm_memory_pool_allocated_bytes_total{pool="G1 Old Gen",} 1.8982904E7
jvm_memory_pool_allocated_bytes_total{pool="G1 Eden Space",} 1.45752064E8
jvm_memory_pool_allocated_bytes_total{pool="CodeHeap 'non-profiled nmethods'",} 1460224.0
jvm_memory_pool_allocated_bytes_total{pool="G1 Survivor Space",} 1.1534336E7
jvm_memory_pool_allocated_bytes_total{pool="Compressed Class Space",} 4181224.0
jvm_memory_pool_allocated_bytes_total{pool="Metaspace",} 3.5371304E7
jvm_memory_pool_allocated_bytes_total{pool="CodeHeap 'non-nmethods'",} 1271808.0
# HELP download_success_count_total Total number of download successfully processed.
# TYPE download_success_count_total counter
download_success_count_total 1.0
# HELP jvm_buffer_pool_used_bytes Used bytes of a given JVM buffer pool.
# TYPE jvm_buffer_pool_used_bytes gauge
jvm_buffer_pool_used_bytes{pool="mapped",} 0.0
jvm_buffer_pool_used_bytes{pool="direct",} 82183.0
# HELP jvm_buffer_pool_capacity_bytes Bytes capacity of a given JVM buffer pool.
# TYPE jvm_buffer_pool_capacity_bytes gauge
jvm_buffer_pool_capacity_bytes{pool="mapped",} 0.0
jvm_buffer_pool_capacity_bytes{pool="direct",} 82183.0
# HELP jvm_buffer_pool_used_buffers Used buffers of a given JVM buffer pool.
# TYPE jvm_buffer_pool_used_buffers gauge
jvm_buffer_pool_used_buffers{pool="mapped",} 0.0
jvm_buffer_pool_used_buffers{pool="direct",} 9.0
# HELP jvm_classes_loaded The number of classes that are currently loaded in the JVM
# TYPE jvm_classes_loaded gauge
jvm_classes_loaded 6364.0
# HELP jvm_classes_loaded_total The total number of classes that have been loaded since the JVM has started execution
# TYPE jvm_classes_loaded_total counter
jvm_classes_loaded_total 6364.0
# HELP jvm_classes_unloaded_total The total number of classes that have been unloaded since the JVM has started execution
# TYPE jvm_classes_unloaded_total counter
jvm_classes_unloaded_total 0.0
# HELP total_download_received_count_total Total number of download received.
# TYPE total_download_received_count_total counter
total_download_received_count_total 1.0
# HELP download_failure_count_total Total number of download failures.
# TYPE download_failure_count_total counter
download_failure_count_total 0.0
# HELP jvm_threads_current Current thread count of a JVM
# TYPE jvm_threads_current gauge
jvm_threads_current 24.0
# HELP jvm_threads_daemon Daemon thread count of a JVM
# TYPE jvm_threads_daemon gauge
jvm_threads_daemon 10.0
# HELP jvm_threads_peak Peak thread count of a JVM
# TYPE jvm_threads_peak gauge
jvm_threads_peak 24.0
# HELP jvm_threads_started_total Started thread count of a JVM
# TYPE jvm_threads_started_total counter
jvm_threads_started_total 25.0
# HELP jvm_threads_deadlocked Cycles of JVM-threads that are in deadlock waiting to acquire object monitors or ownable synchronizers
# TYPE jvm_threads_deadlocked gauge
jvm_threads_deadlocked 0.0
# HELP jvm_threads_deadlocked_monitor Cycles of JVM-threads that are in deadlock waiting to acquire object monitors
# TYPE jvm_threads_deadlocked_monitor gauge
jvm_threads_deadlocked_monitor 0.0
# HELP jvm_threads_state Current count of threads by state
# TYPE jvm_threads_state gauge
jvm_threads_state{state="TERMINATED",} 0.0
jvm_threads_state{state="RUNNABLE",} 8.0
jvm_threads_state{state="BLOCKED",} 0.0
jvm_threads_state{state="WAITING",} 7.0
jvm_threads_state{state="TIMED_WAITING",} 9.0
jvm_threads_state{state="NEW",} 0.0
# HELP jvm_info VM version info
# TYPE jvm_info gauge
jvm_info{runtime="OpenJDK Runtime Environment",vendor="Alpine",version="11.0.16.1+1-alpine-r0",} 1.0
# HELP distribution_failure_count_total Total number of distribution failures.
# TYPE distribution_failure_count_total counter
distribution_failure_count_total 0.0
# HELP jvm_memory_objects_pending_finalization The number of objects waiting in the finalizer queue.
# TYPE jvm_memory_objects_pending_finalization gauge
jvm_memory_objects_pending_finalization 0.0
# HELP jvm_memory_bytes_used Used bytes of a given JVM memory area.
# TYPE jvm_memory_bytes_used gauge
jvm_memory_bytes_used{area="heap",} 2.6863752E7
jvm_memory_bytes_used{area="nonheap",} 5.0739904E7
# HELP jvm_memory_bytes_committed Committed (bytes) of a given JVM memory area.
# TYPE jvm_memory_bytes_committed gauge
jvm_memory_bytes_committed{area="heap",} 1.30023424E8
jvm_memory_bytes_committed{area="nonheap",} 5.5246848E7
# HELP jvm_memory_bytes_max Max (bytes) of a given JVM memory area.
# TYPE jvm_memory_bytes_max gauge
jvm_memory_bytes_max{area="heap",} 2.059403264E9
jvm_memory_bytes_max{area="nonheap",} -1.0
# HELP jvm_memory_bytes_init Initial bytes of a given JVM memory area.
# TYPE jvm_memory_bytes_init gauge
jvm_memory_bytes_init{area="heap",} 1.30023424E8
jvm_memory_bytes_init{area="nonheap",} 7667712.0
# HELP jvm_memory_pool_bytes_used Used bytes of a given JVM memory pool.
# TYPE jvm_memory_pool_bytes_used gauge
jvm_memory_pool_bytes_used{pool="CodeHeap 'non-nmethods'",} 1272576.0
jvm_memory_pool_bytes_used{pool="Metaspace",} 3.5962352E7
jvm_memory_pool_bytes_used{pool="CodeHeap 'profiled nmethods'",} 7626368.0
jvm_memory_pool_bytes_used{pool="Compressed Class Space",} 4237392.0
jvm_memory_pool_bytes_used{pool="G1 Eden Space",} 8388608.0
jvm_memory_pool_bytes_used{pool="G1 Old Gen",} 1.6377992E7
jvm_memory_pool_bytes_used{pool="G1 Survivor Space",} 2097152.0
jvm_memory_pool_bytes_used{pool="CodeHeap 'non-profiled nmethods'",} 1641216.0
# HELP jvm_memory_pool_bytes_committed Committed bytes of a given JVM memory pool.
# TYPE jvm_memory_pool_bytes_committed gauge
jvm_memory_pool_bytes_committed{pool="CodeHeap 'non-nmethods'",} 2555904.0
jvm_memory_pool_bytes_committed{pool="Metaspace",} 3.7617664E7
jvm_memory_pool_bytes_committed{pool="CodeHeap 'profiled nmethods'",} 7667712.0
jvm_memory_pool_bytes_committed{pool="Compressed Class Space",} 4849664.0
jvm_memory_pool_bytes_committed{pool="G1 Eden Space",} 4.8234496E7
jvm_memory_pool_bytes_committed{pool="G1 Old Gen",} 7.9691776E7
jvm_memory_pool_bytes_committed{pool="G1 Survivor Space",} 2097152.0
jvm_memory_pool_bytes_committed{pool="CodeHeap 'non-profiled nmethods'",} 2555904.0
# HELP jvm_memory_pool_bytes_max Max bytes of a given JVM memory pool.
# TYPE jvm_memory_pool_bytes_max gauge
jvm_memory_pool_bytes_max{pool="CodeHeap 'non-nmethods'",} 5832704.0
jvm_memory_pool_bytes_max{pool="Metaspace",} -1.0
jvm_memory_pool_bytes_max{pool="CodeHeap 'profiled nmethods'",} 1.22912768E8
jvm_memory_pool_bytes_max{pool="Compressed Class Space",} 1.073741824E9
jvm_memory_pool_bytes_max{pool="G1 Eden Space",} -1.0
jvm_memory_pool_bytes_max{pool="G1 Old Gen",} 2.059403264E9
jvm_memory_pool_bytes_max{pool="G1 Survivor Space",} -1.0
jvm_memory_pool_bytes_max{pool="CodeHeap 'non-profiled nmethods'",} 1.22912768E8
# HELP jvm_memory_pool_bytes_init Initial bytes of a given JVM memory pool.
# TYPE jvm_memory_pool_bytes_init gauge
jvm_memory_pool_bytes_init{pool="CodeHeap 'non-nmethods'",} 2555904.0
jvm_memory_pool_bytes_init{pool="Metaspace",} 0.0
jvm_memory_pool_bytes_init{pool="CodeHeap 'profiled nmethods'",} 2555904.0
jvm_memory_pool_bytes_init{pool="Compressed Class Space",} 0.0
jvm_memory_pool_bytes_init{pool="G1 Eden Space",} 1.572864E7
jvm_memory_pool_bytes_init{pool="G1 Old Gen",} 1.14294784E8
jvm_memory_pool_bytes_init{pool="G1 Survivor Space",} 0.0
jvm_memory_pool_bytes_init{pool="CodeHeap 'non-profiled nmethods'",} 2555904.0
# HELP jvm_memory_pool_collection_used_bytes Used bytes after last collection of a given JVM memory pool.
# TYPE jvm_memory_pool_collection_used_bytes gauge
jvm_memory_pool_collection_used_bytes{pool="G1 Eden Space",} 0.0
jvm_memory_pool_collection_used_bytes{pool="G1 Old Gen",} 0.0
jvm_memory_pool_collection_used_bytes{pool="G1 Survivor Space",} 2097152.0
# HELP jvm_memory_pool_collection_committed_bytes Committed after last collection bytes of a given JVM memory pool.
# TYPE jvm_memory_pool_collection_committed_bytes gauge
jvm_memory_pool_collection_committed_bytes{pool="G1 Eden Space",} 4.8234496E7
jvm_memory_pool_collection_committed_bytes{pool="G1 Old Gen",} 0.0
jvm_memory_pool_collection_committed_bytes{pool="G1 Survivor Space",} 2097152.0
# HELP jvm_memory_pool_collection_max_bytes Max bytes after last collection of a given JVM memory pool.
# TYPE jvm_memory_pool_collection_max_bytes gauge
jvm_memory_pool_collection_max_bytes{pool="G1 Eden Space",} -1.0
jvm_memory_pool_collection_max_bytes{pool="G1 Old Gen",} 2.059403264E9
jvm_memory_pool_collection_max_bytes{pool="G1 Survivor Space",} -1.0
# HELP jvm_memory_pool_collection_init_bytes Initial after last collection bytes of a given JVM memory pool.
# TYPE jvm_memory_pool_collection_init_bytes gauge
jvm_memory_pool_collection_init_bytes{pool="G1 Eden Space",} 1.572864E7
jvm_memory_pool_collection_init_bytes{pool="G1 Old Gen",} 1.14294784E8
jvm_memory_pool_collection_init_bytes{pool="G1 Survivor Space",} 0.0
# HELP total_distribution_received_count_total Total number of distribution received.
# TYPE total_distribution_received_count_total counter
total_distribution_received_count_total 1.0
# HELP jvm_gc_collection_seconds Time spent in a given JVM garbage collector in seconds.
# TYPE jvm_gc_collection_seconds summary
jvm_gc_collection_seconds_count{gc="G1 Young Generation",} 5.0
jvm_gc_collection_seconds_sum{gc="G1 Young Generation",} 0.023
jvm_gc_collection_seconds_count{gc="G1 Old Generation",} 0.0
jvm_gc_collection_seconds_sum{gc="G1 Old Generation",} 0.0
# HELP process_cpu_seconds_total Total user and system CPU time spent in seconds.
# TYPE process_cpu_seconds_total counter
process_cpu_seconds_total 3.63
# HELP process_start_time_seconds Start time of the process since unix epoch in seconds.
# TYPE process_start_time_seconds gauge
process_start_time_seconds 1.662122... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20220902 13:44:17.638" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220902 13:44:17.627" endtime="20220902 13:44:17.638"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Received response from policy ${resp.text}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220902 13:44:17.639" level="INFO">Received response from policy # HELP jvm_memory_pool_allocated_bytes_total Total bytes allocated in a given JVM memory pool. Only updated after GC, not continuously.
# TYPE jvm_memory_pool_allocated_bytes_total counter
jvm_memory_pool_allocated_bytes_total{pool="CodeHeap 'profiled nmethods'",} 7096832.0
jvm_memory_pool_allocated_bytes_total{pool="G1 Old Gen",} 1.8982904E7
jvm_memory_pool_allocated_bytes_total{pool="G1 Eden Space",} 1.45752064E8
jvm_memory_pool_allocated_bytes_total{pool="CodeHeap 'non-profiled nmethods'",} 1460224.0
jvm_memory_pool_allocated_bytes_total{pool="G1 Survivor Space",} 1.1534336E7
jvm_memory_pool_allocated_bytes_total{pool="Compressed Class Space",} 4181224.0
jvm_memory_pool_allocated_bytes_total{pool="Metaspace",} 3.5371304E7
jvm_memory_pool_allocated_bytes_total{pool="CodeHeap 'non-nmethods'",} 1271808.0
# HELP download_success_count_total Total number of download successfully processed.
# TYPE download_success_count_total counter
download_success_count_total 1.0
# HELP jvm_buffer_pool_used_bytes Used bytes of a given JVM buffer pool.
# TYPE jvm_buffer_pool_used_bytes gauge
jvm_buffer_pool_used_bytes{pool="mapped",} 0.0
jvm_buffer_pool_used_bytes{pool="direct",} 82183.0
# HELP jvm_buffer_pool_capacity_bytes Bytes capacity of a given JVM buffer pool.
# TYPE jvm_buffer_pool_capacity_bytes gauge
jvm_buffer_pool_capacity_bytes{pool="mapped",} 0.0
jvm_buffer_pool_capacity_bytes{pool="direct",} 82183.0
# HELP jvm_buffer_pool_used_buffers Used buffers of a given JVM buffer pool.
# TYPE jvm_buffer_pool_used_buffers gauge
jvm_buffer_pool_used_buffers{pool="mapped",} 0.0
jvm_buffer_pool_used_buffers{pool="direct",} 9.0
# HELP jvm_classes_loaded The number of classes that are currently loaded in the JVM
# TYPE jvm_classes_loaded gauge
jvm_classes_loaded 6364.0
# HELP jvm_classes_loaded_total The total number of classes that have been loaded since the JVM has started execution
# TYPE jvm_classes_loaded_total counter
jvm_classes_loaded_total 6364.0
# HELP jvm_classes_unloaded_total The total number of classes that have been unloaded since the JVM has started execution
# TYPE jvm_classes_unloaded_total counter
jvm_classes_unloaded_total 0.0
# HELP total_download_received_count_total Total number of download received.
# TYPE total_download_received_count_total counter
total_download_received_count_total 1.0
# HELP download_failure_count_total Total number of download failures.
# TYPE download_failure_count_total counter
download_failure_count_total 0.0
# HELP jvm_threads_current Current thread count of a JVM
# TYPE jvm_threads_current gauge
jvm_threads_current 24.0
# HELP jvm_threads_daemon Daemon thread count of a JVM
# TYPE jvm_threads_daemon gauge
jvm_threads_daemon 10.0
# HELP jvm_threads_peak Peak thread count of a JVM
# TYPE jvm_threads_peak gauge
jvm_threads_peak 24.0
# HELP jvm_threads_started_total Started thread count of a JVM
# TYPE jvm_threads_started_total counter
jvm_threads_started_total 25.0
# HELP jvm_threads_deadlocked Cycles of JVM-threads that are in deadlock waiting to acquire object monitors or ownable synchronizers
# TYPE jvm_threads_deadlocked gauge
jvm_threads_deadlocked 0.0
# HELP jvm_threads_deadlocked_monitor Cycles of JVM-threads that are in deadlock waiting to acquire object monitors
# TYPE jvm_threads_deadlocked_monitor gauge
jvm_threads_deadlocked_monitor 0.0
# HELP jvm_threads_state Current count of threads by state
# TYPE jvm_threads_state gauge
jvm_threads_state{state="TERMINATED",} 0.0
jvm_threads_state{state="RUNNABLE",} 8.0
jvm_threads_state{state="BLOCKED",} 0.0
jvm_threads_state{state="WAITING",} 7.0
jvm_threads_state{state="TIMED_WAITING",} 9.0
jvm_threads_state{state="NEW",} 0.0
# HELP jvm_info VM version info
# TYPE jvm_info gauge
jvm_info{runtime="OpenJDK Runtime Environment",vendor="Alpine",version="11.0.16.1+1-alpine-r0",} 1.0
# HELP distribution_failure_count_total Total number of distribution failures.
# TYPE distribution_failure_count_total counter
distribution_failure_count_total 0.0
# HELP jvm_memory_objects_pending_finalization The number of objects waiting in the finalizer queue.
# TYPE jvm_memory_objects_pending_finalization gauge
jvm_memory_objects_pending_finalization 0.0
# HELP jvm_memory_bytes_used Used bytes of a given JVM memory area.
# TYPE jvm_memory_bytes_used gauge
jvm_memory_bytes_used{area="heap",} 2.6863752E7
jvm_memory_bytes_used{area="nonheap",} 5.0739904E7
# HELP jvm_memory_bytes_committed Committed (bytes) of a given JVM memory area.
# TYPE jvm_memory_bytes_committed gauge
jvm_memory_bytes_committed{area="heap",} 1.30023424E8
jvm_memory_bytes_committed{area="nonheap",} 5.5246848E7
# HELP jvm_memory_bytes_max Max (bytes) of a given JVM memory area.
# TYPE jvm_memory_bytes_max gauge
jvm_memory_bytes_max{area="heap",} 2.059403264E9
jvm_memory_bytes_max{area="nonheap",} -1.0
# HELP jvm_memory_bytes_init Initial bytes of a given JVM memory area.
# TYPE jvm_memory_bytes_init gauge
jvm_memory_bytes_init{area="heap",} 1.30023424E8
jvm_memory_bytes_init{area="nonheap",} 7667712.0
# HELP jvm_memory_pool_bytes_used Used bytes of a given JVM memory pool.
# TYPE jvm_memory_pool_bytes_used gauge
jvm_memory_pool_bytes_used{pool="CodeHeap 'non-nmethods'",} 1272576.0
jvm_memory_pool_bytes_used{pool="Metaspace",} 3.5962352E7
jvm_memory_pool_bytes_used{pool="CodeHeap 'profiled nmethods'",} 7626368.0
jvm_memory_pool_bytes_used{pool="Compressed Class Space",} 4237392.0
jvm_memory_pool_bytes_used{pool="G1 Eden Space",} 8388608.0
jvm_memory_pool_bytes_used{pool="G1 Old Gen",} 1.6377992E7
jvm_memory_pool_bytes_used{pool="G1 Survivor Space",} 2097152.0
jvm_memory_pool_bytes_used{pool="CodeHeap 'non-profiled nmethods'",} 1641216.0
# HELP jvm_memory_pool_bytes_committed Committed bytes of a given JVM memory pool.
# TYPE jvm_memory_pool_bytes_committed gauge
jvm_memory_pool_bytes_committed{pool="CodeHeap 'non-nmethods'",} 2555904.0
jvm_memory_pool_bytes_committed{pool="Metaspace",} 3.7617664E7
jvm_memory_pool_bytes_committed{pool="CodeHeap 'profiled nmethods'",} 7667712.0
jvm_memory_pool_bytes_committed{pool="Compressed Class Space",} 4849664.0
jvm_memory_pool_bytes_committed{pool="G1 Eden Space",} 4.8234496E7
jvm_memory_pool_bytes_committed{pool="G1 Old Gen",} 7.9691776E7
jvm_memory_pool_bytes_committed{pool="G1 Survivor Space",} 2097152.0
jvm_memory_pool_bytes_committed{pool="CodeHeap 'non-profiled nmethods'",} 2555904.0
# HELP jvm_memory_pool_bytes_max Max bytes of a given JVM memory pool.
# TYPE jvm_memory_pool_bytes_max gauge
jvm_memory_pool_bytes_max{pool="CodeHeap 'non-nmethods'",} 5832704.0
jvm_memory_pool_bytes_max{pool="Metaspace",} -1.0
jvm_memory_pool_bytes_max{pool="CodeHeap 'profiled nmethods'",} 1.22912768E8
jvm_memory_pool_bytes_max{pool="Compressed Class Space",} 1.073741824E9
jvm_memory_pool_bytes_max{pool="G1 Eden Space",} -1.0
jvm_memory_pool_bytes_max{pool="G1 Old Gen",} 2.059403264E9
jvm_memory_pool_bytes_max{pool="G1 Survivor Space",} -1.0
jvm_memory_pool_bytes_max{pool="CodeHeap 'non-profiled nmethods'",} 1.22912768E8
# HELP jvm_memory_pool_bytes_init Initial bytes of a given JVM memory pool.
# TYPE jvm_memory_pool_bytes_init gauge
jvm_memory_pool_bytes_init{pool="CodeHeap 'non-nmethods'",} 2555904.0
jvm_memory_pool_bytes_init{pool="Metaspace",} 0.0
jvm_memory_pool_bytes_init{pool="CodeHeap 'profiled nmethods'",} 2555904.0
jvm_memory_pool_bytes_init{pool="Compressed Class Space",} 0.0
jvm_memory_pool_bytes_init{pool="G1 Eden Space",} 1.572864E7
jvm_memory_pool_bytes_init{pool="G1 Old Gen",} 1.14294784E8
jvm_memory_pool_bytes_init{pool="G1 Survivor Space",} 0.0
jvm_memory_pool_bytes_init{pool="CodeHeap 'non-profiled nmethods'",} 2555904.0
# HELP jvm_memory_pool_collection_used_bytes Used bytes after last collection of a given JVM memory pool.
# TYPE jvm_memory_pool_collection_used_bytes gauge
jvm_memory_pool_collection_used_bytes{pool="G1 Eden Space",} 0.0
jvm_memory_pool_collection_used_bytes{pool="G1 Old Gen",} 0.0
jvm_memory_pool_collection_used_bytes{pool="G1 Survivor Space",} 2097152.0
# HELP jvm_memory_pool_collection_committed_bytes Committed after last collection bytes of a given JVM memory pool.
# TYPE jvm_memory_pool_collection_committed_bytes gauge
jvm_memory_pool_collection_committed_bytes{pool="G1 Eden Space",} 4.8234496E7
jvm_memory_pool_collection_committed_bytes{pool="G1 Old Gen",} 0.0
jvm_memory_pool_collection_committed_bytes{pool="G1 Survivor Space",} 2097152.0
# HELP jvm_memory_pool_collection_max_bytes Max bytes after last collection of a given JVM memory pool.
# TYPE jvm_memory_pool_collection_max_bytes gauge
jvm_memory_pool_collection_max_bytes{pool="G1 Eden Space",} -1.0
jvm_memory_pool_collection_max_bytes{pool="G1 Old Gen",} 2.059403264E9
jvm_memory_pool_collection_max_bytes{pool="G1 Survivor Space",} -1.0
# HELP jvm_memory_pool_collection_init_bytes Initial after last collection bytes of a given JVM memory pool.
# TYPE jvm_memory_pool_collection_init_bytes gauge
jvm_memory_pool_collection_init_bytes{pool="G1 Eden Space",} 1.572864E7
jvm_memory_pool_collection_init_bytes{pool="G1 Old Gen",} 1.14294784E8
jvm_memory_pool_collection_init_bytes{pool="G1 Survivor Space",} 0.0
# HELP total_distribution_received_count_total Total number of distribution received.
# TYPE total_distribution_received_count_total counter
total_distribution_received_count_total 1.0
# HELP jvm_gc_collection_seconds Time spent in a given JVM garbage collector in seconds.
# TYPE jvm_gc_collection_seconds summary
jvm_gc_collection_seconds_count{gc="G1 Young Generation",} 5.0
jvm_gc_collection_seconds_sum{gc="G1 Young Generation",} 0.023
jvm_gc_collection_seconds_count{gc="G1 Old Generation",} 0.0
jvm_gc_collection_seconds_sum{gc="G1 Old Generation",} 0.0
# HELP process_cpu_seconds_total Total user and system CPU time spent in seconds.
# TYPE process_cpu_seconds_total counter
process_cpu_seconds_total 3.63
# HELP process_start_time_seconds Start time of the process since unix epoch in seconds.
# TYPE process_start_time_seconds gauge
process_start_time_seconds 1.662122632545E9
# HELP process_open_fds Number of open file descriptors.
# TYPE process_open_fds gauge
process_open_fds 163.0
# HELP process_max_fds Maximum number of open file descriptors.
# TYPE process_max_fds gauge
process_max_fds 1048576.0
# HELP process_virtual_memory_bytes Virtual memory size in bytes.
# TYPE process_virtual_memory_bytes gauge
process_virtual_memory_bytes 3.81560832E9
# HELP process_resident_memory_bytes Resident memory size in bytes.
# TYPE process_resident_memory_bytes gauge
process_resident_memory_bytes 1.83906304E8
# HELP distribution_success_count_total Total number of distribution successfully processed.
# TYPE distribution_success_count_total counter
distribution_success_count_total 1.0
# HELP distribution_failure_count_created Total number of distribution failures.
# TYPE distribution_failure_count_created gauge
distribution_failure_count_created 1.662122637366E9
# HELP distribution_success_count_created Total number of distribution successfully processed.
# TYPE distribution_success_count_created gauge
distribution_success_count_created 1.662122637366E9
# HELP download_failure_count_created Total number of download failures.
# TYPE download_failure_count_created gauge
download_failure_count_created 1.662122637366E9
# HELP download_success_count_created Total number of download successfully processed.
# TYPE download_success_count_created gauge
download_success_count_created 1.662122637366E9
# HELP jvm_memory_pool_allocated_bytes_created Total bytes allocated in a given JVM memory pool. Only updated after GC, not continuously.
# TYPE jvm_memory_pool_allocated_bytes_created gauge
jvm_memory_pool_allocated_bytes_created{pool="CodeHeap 'profiled nmethods'",} 1.66212263315E9
jvm_memory_pool_allocated_bytes_created{pool="G1 Old Gen",} 1.662122633155E9
jvm_memory_pool_allocated_bytes_created{pool="G1 Eden Space",} 1.662122633155E9
jvm_memory_pool_allocated_bytes_created{pool="CodeHeap 'non-profiled nmethods'",} 1.662122633155E9
jvm_memory_pool_allocated_bytes_created{pool="G1 Survivor Space",} 1.662122633155E9
jvm_memory_pool_allocated_bytes_created{pool="Compressed Class Space",} 1.662122633155E9
jvm_memory_pool_allocated_bytes_created{pool="Metaspace",} 1.662122633155E9
jvm_memory_pool_allocated_bytes_created{pool="CodeHeap 'non-nmethods'",} 1.662122633155E9
# HELP total_distribution_received_count_created Total number of distribution received.
# TYPE total_distribution_received_count_created gauge
total_distribution_received_count_created 1.662122637366E9
# HELP total_download_received_count_created Total number of download received.
# TYPE total_download_received_count_created gauge
total_download_received_count_created 1.662122637366E9
</msg>
<status status="PASS" starttime="20220902 13:44:17.638" endtime="20220902 13:44:17.639"/>
</kw>
<msg timestamp="20220902 13:44:17.639" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220902 13:44:17.623" endtime="20220902 13:44:17.639"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${resp.text}</arg>
<arg>total_distribution_received_count_total 1.0</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220902 13:44:17.640" endtime="20220902 13:44:17.641"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${resp.text}</arg>
<arg>distribution_success_count_total 1.0</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220902 13:44:17.641" endtime="20220902 13:44:17.642"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${resp.text}</arg>
<arg>distribution_failure_count_total 0.0</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220902 13:44:17.642" endtime="20220902 13:44:17.643"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${resp.text}</arg>
<arg>total_download_received_count_total 1.0</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220902 13:44:17.643" endtime="20220902 13:44:17.644"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${resp.text}</arg>
<arg>download_success_count_total 1.0</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220902 13:44:17.644" endtime="20220902 13:44:17.645"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${resp.text}</arg>
<arg>download_failure_count_total 0.0</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220902 13:44:17.645" endtime="20220902 13:44:17.646"/>
</kw>
<doc>Verify policy-distribution is exporting prometheus metrics after execution</doc>
<status status="PASS" starttime="20220902 13:44:17.620" endtime="20220902 13:44:17.646"/>
</test>
<status status="PASS" starttime="20220902 13:43:57.238" endtime="20220902 13:44:17.647"/>
</suite>
<statistics>
<total>
<stat pass="5" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="5" fail="0" skip="0" id="s1" name="distribution">distribution</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
